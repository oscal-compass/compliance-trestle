# generated by datamodel-codegen:
#   filename:  oscal_assessment-results_schema.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import AnyUrl, EmailStr, Field, conint, constr
from trestle.core.base_model import OscalBaseModel


class RelatedObservation(OscalBaseModel):
    observation_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='observation-uuid',
        description='References an observation defined in the list of observations.',
        title='Observation Universally Unique Identifier Reference',
    )


class RelatedRisk(OscalBaseModel):
    risk_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='risk-uuid',
        description='References an risk defined in the list of risks.',
        title='Risk Universally Unique Identifier Reference',
    )


class OscalMetadataLocationUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='References a location defined in metadata.',
        title='Location Reference',
    )


class Type(Enum):
    person = 'person'
    organization = 'organization'


class ExternalId(OscalBaseModel):
    scheme: AnyUrl = Field(
        ...,
        description='Indicates the type of external identifier.',
        title='External Identifier Schema',
    )
    id: str


class MemberOfOrganization(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Identifies that the party object is a member of the organization associated with the provided UUID.',
        title='Organizational Affiliation',
    )


class OscalMetadataPartyUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='References a party defined in metadata.',
        title='Party Reference',
    )


class OscalMetadataRoleId(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='A reference to the roles served by the user.',
        title='Role Identifier Reference',
    )


class Base64(OscalBaseModel):
    filename: Optional[str] = Field(
        None,
        description='Name of the file before it was encoded as Base64 to be embedded in a resource. This is the name that will be assigned to the file when the file is decoded.',
        title='File Name',
    )
    media_type: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='media-type',
        description='Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.',
        title='Media Type',
    )
    value: str


class OscalMetadataLink(OscalBaseModel):
    href: str = Field(
        ...,
        description='A resolvable URL reference to a resource.',
        title='Hypertext Reference',
    )
    rel: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        description="Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.",
        title='Relation',
    )
    media_type: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='media-type',
        description='Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.',
        title='Media Type',
    )
    text: Optional[str] = Field(
        None,
        description='A textual label to associate with the link, which may be used for presentation in a tool.',
        title='Link Text',
    )


class OscalMetadataHash(OscalBaseModel):
    algorithm: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='Method by which a hash is derived', title='Hash algorithm'
    )
    value: str


class OscalMetadataRemarks(OscalBaseModel):
    __root__: str = Field(
        ...,
        description='Additional commentary on the containing object.',
        title='Remarks',
    )


class OscalMetadataPublished(OscalBaseModel):
    __root__: datetime = Field(
        ...,
        description='The date and time the document was published. The date-time value must be formatted according to RFC 3339 with full time and time zone included.',
        title='Publication Timestamp',
    )


class OscalMetadataLastModified(OscalBaseModel):
    __root__: datetime = Field(
        ...,
        description='The date and time the document was last modified. The date-time value must be formatted according to RFC 3339 with full time and time zone included.',
        title='Last Modified Timestamp',
    )


class OscalMetadataVersion(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='A string used to distinguish the current version of the document from other previous (and future) versions.',
        title='Document Version',
    )


class OscalMetadataOscalVersion(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='The OSCAL model version the document was authored against.',
        title='OSCAL version',
    )


class OscalMetadataEmailAddress(OscalBaseModel):
    __root__: EmailStr = Field(
        ...,
        description='An email address as defined by RFC 5322 Section 3.4.1.',
        title='Email Address',
    )


class OscalMetadataTelephoneNumber(OscalBaseModel):
    type: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None, description='Indicates the type of phone number.', title='type flag'
    )
    number: str


class OscalMetadataAddrLine(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='A single line of an address.', title='Address line'
    )


class OscalMetadataDocumentId(OscalBaseModel):
    scheme: Optional[AnyUrl] = Field(
        None,
        description='Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters.',
        title='Document Identification Scheme',
    )
    identifier: str


class OscalAssessmentCommonImportSsp(OscalBaseModel):
    href: str = Field(
        ...,
        description='>A resolvable URL reference to the system security plan for the system being assessed.',
        title='System Security Plan Reference',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OnDate(OscalBaseModel):
    date: datetime = Field(
        ...,
        description='The task must occur on the specified date.',
        title='On Date Condition',
    )


class WithinDateRange(OscalBaseModel):
    start: datetime = Field(
        ...,
        description='The task must occur on or after the specified date.',
        title='Start Date Condition',
    )
    end: datetime = Field(
        ...,
        description='The task must occur on or before the specified date.',
        title='End Date Condition',
    )


class Unit(Enum):
    seconds = 'seconds'
    minutes = 'minutes'
    hours = 'hours'
    days = 'days'
    months = 'months'
    years = 'years'


class AtFrequency(OscalBaseModel):
    period: conint(ge=1, multiple_of=1) = Field(
        ...,
        description='The task must occur after the specified period has elapsed.',
        title='Period',
    )
    unit: Unit = Field(
        ..., description='The unit of time for the period.', title='Time Unit'
    )


class Timing(OscalBaseModel):
    on_date: Optional[OnDate] = Field(
        None,
        alias='on-date',
        description='The task is intended to occur on the specified date.',
        title='On Date Condition',
    )
    within_date_range: Optional[WithinDateRange] = Field(
        None,
        alias='within-date-range',
        description='The task is intended to occur within the specified date range.',
        title='On Date Range Condition',
    )
    at_frequency: Optional[AtFrequency] = Field(
        None,
        alias='at-frequency',
        description='The task is intended to occur at the specified frequency.',
        title='Frequency Condition',
    )


class Dependency(OscalBaseModel):
    task_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='task-uuid',
        description='References a unique task by UUID.',
        title='Task Universally Unique Identifier Reference',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class StatementId(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Used to constrain the selection to only specificity identified statements.',
        title='Include Specific Statements',
    )


class OscalAssessmentCommonSelectControlById(OscalBaseModel):
    control_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='control-id',
        description='A reference to a control with a corresponding id value.',
        title='Control Identifier Reference',
    )
    statement_ids: Optional[List[StatementId]] = Field(
        None, alias='statement-ids', min_items=1
    )


class OscalAssessmentCommonSelectObjectiveById(OscalBaseModel):
    objective_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='objective-id',
        description='Points to an assessment objective.',
        title='Objective ID',
    )


class Source(OscalBaseModel):
    task_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='task-uuid',
        description='Uniquely identifies an assessment activity to be performed as part of the event. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for this schedule across revisions of the document.',
        title='Task Universally Unique Identifier',
    )


class Type1(Enum):
    statement_id = 'statement-id'
    objective_id = 'objective-id'


class State(Enum):
    satisfied = 'satisfied'
    not_satisfied = 'not-satisfied'


class Status(OscalBaseModel):
    state: State = Field(
        ...,
        description='An indication as to whether the objective is satisfied or not.',
        title='Objective Status State',
    )
    reason: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        description="The reason the objective was given it's status.",
        title='Objective Status Reason',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class Method(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='Identifies how the observation was made.',
        title='Observation Method',
    )


class Type2(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Identifies the nature of the observation. More than one may be used to further qualify and enable filtering.',
        title='Observation Type',
    )


class Type3(Enum):
    tool = 'tool'
    assessment_platform = 'assessment-platform'
    party = 'party'


class OscalAssessmentCommonThreatId(OscalBaseModel):
    system: AnyUrl = Field(
        ...,
        description='Specifies the source of the threat information.',
        title='Threat Type Identification System',
    )
    href: Optional[str] = Field(
        None,
        description='An optional location for the threat data, from which this ID originates.',
        title='Threat Information Resource Reference',
    )
    id: str


class RelatedObservation1(OscalBaseModel):
    observation_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='observation-uuid',
        description='References an observation defined in the list of observations.',
        title='Observation Universally Unique Identifier Reference',
    )


class OscalAssessmentCommonLoggedBy(OscalBaseModel):
    party_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='party-uuid',
        description='A pointer to the party who is making the log entry.',
        title='Party UUID Reference',
    )
    role_id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='role-id',
        description='A point to the role-id of the role in which the party is making the log entry.',
        title='Actor Role',
    )


class OscalAssessmentCommonRiskStatus(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Describes the status of the associated risk.',
        title='Risk Status',
    )


class Test(OscalBaseModel):
    expression: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='A formal (executable) expression of a constraint',
        title='Constraint test',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class CommonParameterConstraint(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='A textual summary of the constraint to be applied.',
        title='Constraint Description',
    )
    tests: Optional[List[Test]] = Field(None, min_items=1)


class CommonParameterGuideline(OscalBaseModel):
    prose: str = Field(
        ...,
        description='Prose permits multiple paragraphs, lists, tables etc.',
        title='Guideline Text',
    )


class CommonParameterValue(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='A parameter value or set of values.', title='Parameter Value'
    )


class HowMany(Enum):
    one = 'one'
    one_or_more = 'one-or-more'


class CommonParameterSelection(OscalBaseModel):
    how_many: Optional[HowMany] = Field(
        None,
        alias='how-many',
        description='Describes the number of selections that must occur. Without this setting, only one value should be assumed to be permitted.',
        title='Parameter Cardinality',
    )
    choice: Optional[List[str]] = Field(None, min_items=1)


class State1(Enum):
    under_development = 'under-development'
    operational = 'operational'
    disposition = 'disposition'
    other = 'other'


class Status1(OscalBaseModel):
    state: State1 = Field(..., description='The operational status.', title='State')
    remarks: Optional[OscalMetadataRemarks] = None


class Transport(Enum):
    TCP = 'TCP'
    UDP = 'UDP'


class OscalImplementationCommonPortRange(OscalBaseModel):
    start: Optional[conint(ge=0, multiple_of=1)] = Field(
        None,
        description='Indicates the starting port number in a port range',
        title='Start',
    )
    end: Optional[conint(ge=0, multiple_of=1)] = Field(
        None,
        description='Indicates the ending port number in a port range',
        title='End',
    )
    transport: Optional[Transport] = Field(
        None, description='Indicates the transport type.', title='Transport'
    )


class OscalImplementationCommonImplementationStatus(OscalBaseModel):
    state: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Identifies the implementation status of the control or control objective.',
        title='Implementation State',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalImplementationCommonFunctionPerformed(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='Describes a function performed for a given authorized privilege by this user class.',
        title='Functions Performed',
    )


class Value(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='A parameter value or set of values.', title='Parameter Value'
    )


class OscalImplementationCommonSetParameter(OscalBaseModel):
    param_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='param-id',
        description="A reference to a parameter within a control, who's catalog has been imported into the current implementation context.",
        title='Parameter ID',
    )
    values: List[Value] = Field(..., min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalImplementationCommonSystemId(OscalBaseModel):
    identifier_type: Optional[AnyUrl] = Field(
        None,
        alias='identifier-type',
        description='Identifies the identification system from which the provided identifier was assigned.',
        title='Identification System Type',
    )
    id: str


class OscalArImportAp(OscalBaseModel):
    href: str = Field(
        ...,
        description='>A resolvable URL reference to the assessment plan governing the assessment activities.',
        title='Assessment Plan Reference',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class Rlink(OscalBaseModel):
    href: str = Field(
        ...,
        description='A resolvable URI reference to a resource.',
        title='Hypertext Reference',
    )
    media_type: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='media-type',
        description='Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.',
        title='Media Type',
    )
    hashes: Optional[List[OscalMetadataHash]] = Field(None, min_items=1)


class OscalMetadataProperty(OscalBaseModel):
    name: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A textual label that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object.",
        title='Property Name',
    )
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A unique identifier that can be used to reference this property elsewhere in an OSCAL document. A UUID should be consistently used for a given location across revisions of the document.',
        title='Property Universally Unique Identifier',
    )
    ns: Optional[AnyUrl] = Field(
        None,
        description="A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.",
        title='Property Namespace',
    )
    value: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='Indicates the value of the attribute, characteristic, or quality.',
        title='Property Value',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description="A textual label that provides a sub-type or characterization of the property's name. This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same name and ns.",
        title='Property Class',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalMetadataResponsibleParty(OscalBaseModel):
    role_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='role-id',
        description='The role that the party is responsible for.',
        title='Responsible Role',
    )
    party_uuids: List[OscalMetadataPartyUuid] = Field(
        ..., alias='party-uuids', min_items=1
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalMetadataResponsibleRole(OscalBaseModel):
    role_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='role-id',
        description='The role that is responsible for the business function.',
        title='Responsible Role ID',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    party_uuids: Optional[List[OscalMetadataPartyUuid]] = Field(
        None, alias='party-uuids', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalMetadataAddress(OscalBaseModel):
    type: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(None, description='Indicates the type of address.', title='Address Type')
    addr_lines: Optional[List[OscalMetadataAddrLine]] = Field(
        None, alias='addr-lines', min_items=1
    )
    city: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='City, town or geographical region for the mailing address.',
        title='City',
    )
    state: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='State, province or analogous geographical region for mailing address',
        title='State',
    )
    postal_code: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='postal-code',
        description='Postal or ZIP code for mailing address',
        title='Postal Code',
    )
    country: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='The ISO 3166-1 alpha-2 country code for the mailing address.',
        title='Country Code',
    )


class ControlSelection(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='A human-readable description of in-scope controls specified for assessment.',
        title='Assessed Controls Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    include_all: Optional[Dict[str, Any]] = Field(
        None,
        alias='include-all',
        description='A key word to indicate all.',
        title='All',
    )
    include_controls: Optional[List[OscalAssessmentCommonSelectControlById]] = Field(
        None, alias='include-controls', min_items=1
    )
    exclude_controls: Optional[List[OscalAssessmentCommonSelectControlById]] = Field(
        None, alias='exclude-controls', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class ControlObjectiveSelection(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this collection of control objectives.',
        title='Control Objectives Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    include_all: Optional[Dict[str, Any]] = Field(
        None,
        alias='include-all',
        description='A key word to indicate all.',
        title='All',
    )
    include_objectives: Optional[
        List[OscalAssessmentCommonSelectObjectiveById]
    ] = Field(None, alias='include-objectives', min_items=1)
    exclude_objectives: Optional[
        List[OscalAssessmentCommonSelectObjectiveById]
    ] = Field(None, alias='exclude-objectives', min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonReviewedControls(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='A human-readable description of control objectives.',
        title='Control Objective Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    control_selections: List[ControlSelection] = Field(
        ..., alias='control-selections', min_items=1
    )
    control_objective_selections: Optional[List[ControlObjectiveSelection]] = Field(
        None, alias='control-objective-selections', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonAssessmentSubjectPlaceholder(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies a set of assessment subjects that will be identified by a task or an activity that is part of a task.',
        title='Assessment Subject Placeholder Universally Unique Identifier',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of intent of this assessment subject placeholder.',
        title='Assessment Subject Placeholder Description',
    )
    sources: List[Source] = Field(..., min_items=1)
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonSelectSubjectById(OscalBaseModel):
    subject_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='subject-uuid',
        description="A pointer to a component, inventory-item, location, party, user, or resource using it's UUID.",
        title='Subject Universally Unique Identifier Reference',
    )
    type: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Used to indicate the type of object pointed to by the uuid-ref within a subject.',
        title='Subject Universally Unique Identifier Reference Type',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonSubjectReference(OscalBaseModel):
    subject_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='subject-uuid',
        description="A pointer to a component, inventory-item, location, party, user, or resource using it's UUID.",
        title='Subject Universally Unique Identifier Reference',
    )
    type: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Used to indicate the type of object pointed to by the uuid-ref within a subject.',
        title='Subject Universally Unique Identifier Reference Type',
    )
    title: Optional[str] = Field(
        None,
        description='The title or name for the referenced subject.',
        title='Subject Reference Title',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class UsesComponent(OscalBaseModel):
    component_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='component-uuid',
        description='A reference to a component that is implemented as part of an inventory item.',
        title='Component Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    responsible_parties: Optional[List[OscalMetadataResponsibleParty]] = Field(
        None, alias='responsible-parties', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class AssessmentPlatform(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment Platform.',
        title='Assessment Platform Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='The title or name for the assessment platform.',
        title='Assessment Platform Title',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    uses_components: Optional[List[UsesComponent]] = Field(
        None, alias='uses-components', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonFindingTarget(OscalBaseModel):
    type: Type1 = Field(
        ...,
        description='Identifies the type of the target.',
        title='Finding Target Type',
    )
    target_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='target-id',
        description='Identifies the specific target qualified by the type.',
        title='Finding Target Identifier Reference',
    )
    title: Optional[str] = Field(
        None,
        description='The title for this objective status.',
        title='Objective Status Title',
    )
    description: Optional[str] = Field(
        None,
        description="A human-readable description of the assessor's conclusions regarding the degree to which an objective is satisfied.",
        title='Objective Status Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    status: Status = Field(
        ...,
        description='A determination of if the objective is satisfied or not within a given system.',
        title='Objective Status',
    )
    implementation_status: Optional[
        OscalImplementationCommonImplementationStatus
    ] = Field(None, alias='implementation-status')
    remarks: Optional[OscalMetadataRemarks] = None


class RelevantEvidence(OscalBaseModel):
    href: Optional[str] = Field(
        None,
        description='>A resolvable URL reference to relevant evidence.',
        title='Relevant Evidence Reference',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this evidence.',
        title='Relevant Evidence Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonOriginActor(OscalBaseModel):
    type: Type3 = Field(..., description='The kind of actor.', title='Actor Type')
    actor_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='actor-uuid',
        description='A pointer to the tool or person based on the associated type.',
        title='Actor Universally Unique Identifier Reference',
    )
    role_id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='role-id',
        description='For a party, this can optionally be used to specify the role the actor was performing.',
        title='Actor Role',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)


class MitigatingFactor(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this mitigating factor. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given mitigating factor across revisions.',
        title='Mitigating Factor Universally Unique Identifier',
    )
    implementation_uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        alias='implementation-uuid',
        description='Points to an implementation statement in the SSP.',
        title='Implementation UUID',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this mitigating factor.',
        title='Mitigating Factor Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    subjects: Optional[List[OscalAssessmentCommonSubjectReference]] = Field(
        None, min_items=1
    )


class Facet(OscalBaseModel):
    name: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='The name of the risk metric within the specified system.',
        title='Facet Name',
    )
    system: AnyUrl = Field(
        ...,
        description='Specifies the naming system under which this risk metric is organized, which allows for the same names to be used in different systems controlled by different parties. This avoids the potential of a name clash.',
        title='Naming System',
    )
    value: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='Indicates the value of the facet.', title='Facet Value'
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class RequiredAsset(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this required asset. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given required asset across revisions.',
        title='Required Universally Unique Identifier',
    )
    subjects: Optional[List[OscalAssessmentCommonSubjectReference]] = Field(
        None, min_items=1
    )
    title: Optional[str] = Field(
        None,
        description='The title for this required asset.',
        title='Title for Required Asset',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this required asset.',
        title='Description of Required Asset',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonAssessmentPart(OscalBaseModel):
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description="A unique identifier for a specific part instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same part across minor revisions of the document.",
        title='Part Identifier',
    )
    name: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A textual label that uniquely identifies the part's semantic type.",
        title='Part Name',
    )
    ns: Optional[AnyUrl] = Field(
        None,
        description="A namespace qualifying the part's name. This allows different organizations to associate distinct semantics with the same name.",
        title='Part Namespace',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description="A textual label that provides a sub-type or characterization of the part's name. This can be used to further distinguish or discriminate between the semantics of multiple parts of the same control with the same name and ns.",
        title='Part Class',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the part, which may be used by a tool for display and navigation.',
        title='Part Title',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    prose: Optional[str] = Field(
        None,
        description='Permits multiple paragraphs, lists, tables etc.',
        title='Part Text',
    )
    parts: Optional[List[OscalAssessmentCommonAssessmentPart]] = None
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)


class CommonPart(OscalBaseModel):
    id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        description="A unique identifier for a specific part instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same part across minor revisions of the document.",
        title='Part Identifier',
    )
    name: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A textual label that uniquely identifies the part's semantic type.",
        title='Part Name',
    )
    ns: Optional[AnyUrl] = Field(
        None,
        description="A namespace qualifying the part's name. This allows different organizations to associate distinct semantics with the same name.",
        title='Part Namespace',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description="A textual label that provides a sub-type or characterization of the part's name. This can be used to further distinguish or discriminate between the semantics of multiple parts of the same control with the same name and ns.",
        title='Part Class',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the part, which may be used by a tool for display and navigation.',
        title='Part Title',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    prose: Optional[str] = Field(
        None,
        description='Permits multiple paragraphs, lists, tables etc.',
        title='Part Text',
    )
    parts: Optional[List[CommonPart]] = None
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)


class CommonParameter(OscalBaseModel):
    id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A unique identifier for a specific parameter instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same parameter across minor revisions of the document.",
        title='Parameter Identifier',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description='A textual label that provides a characterization of the parameter.',
        title='Parameter Class',
    )
    depends_on: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='depends-on',
        description='Another parameter invoking this one',
        title='Depends on',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    label: Optional[str] = Field(
        None,
        description='A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.',
        title='Parameter Label',
    )
    usage: Optional[str] = Field(
        None,
        description='Describes the purpose and use of a parameter',
        title='Parameter Usage Description',
    )
    constraints: Optional[List[CommonParameterConstraint]] = Field(None, min_items=1)
    guidelines: Optional[List[CommonParameterGuideline]] = Field(None, min_items=1)
    values: Optional[List[CommonParameterValue]] = Field(None, min_items=1)
    select: Optional[CommonParameterSelection] = None
    remarks: Optional[OscalMetadataRemarks] = None


class OscalImplementationCommonProtocol(OscalBaseModel):
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A globally unique identifier that can be used to reference this service protocol entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Service Protocol Information Universally Unique Identifier',
    )
    name: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='The common name of the protocol, which should be the appropriate "service name" from the IANA Service Name and Transport Protocol Port Number Registry.',
        title='Protocol Name',
    )
    title: Optional[str] = Field(
        None,
        description='A human readable name for the protocol (e.g., Transport Layer Security).',
        title='Protocol Title',
    )
    port_ranges: Optional[List[OscalImplementationCommonPortRange]] = Field(
        None, alias='port-ranges', min_items=1
    )


class OscalImplementationCommonAuthorizedPrivilege(OscalBaseModel):
    title: str = Field(
        ...,
        description='A human readable name for the privilege.',
        title='Privilege Title',
    )
    description: Optional[str] = Field(
        None,
        description="A summary of the privilege's purpose within the system.",
        title='Privilege Description',
    )
    functions_performed: List[OscalImplementationCommonFunctionPerformed] = Field(
        ..., alias='functions-performed', min_items=1
    )


class ImplementedComponent(OscalBaseModel):
    component_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='component-uuid',
        description='A reference to a component that is implemented as part of an inventory item.',
        title='Component Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    responsible_parties: Optional[List[OscalMetadataResponsibleParty]] = Field(
        None, alias='responsible-parties', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalImplementationCommonInventoryItem(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this inventory item entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Inventory Item Universally Unique Identifier',
    )
    description: str = Field(
        ...,
        description='A summary of the inventory item stating its purpose within the system.',
        title='Inventory Item Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    responsible_parties: Optional[List[OscalMetadataResponsibleParty]] = Field(
        None, alias='responsible-parties', min_items=1
    )
    implemented_components: Optional[List[ImplementedComponent]] = Field(
        None, alias='implemented-components', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class Attestation(OscalBaseModel):
    responsible_parties: Optional[List[OscalMetadataResponsibleParty]] = Field(
        None, alias='responsible-parties', min_items=1
    )
    parts: List[OscalAssessmentCommonAssessmentPart] = Field(..., min_items=1)


class OscalMetadataRevision(OscalBaseModel):
    title: Optional[str] = Field(
        None,
        description='A name given to the document revision, which may be used by a tool for display and navigation.',
        title='Document Title',
    )
    published: Optional[OscalMetadataPublished] = None
    last_modified: Optional[OscalMetadataLastModified] = Field(
        None, alias='last-modified'
    )
    version: Optional[OscalMetadataVersion] = None
    oscal_version: Optional[OscalMetadataOscalVersion] = Field(
        None, alias='oscal-version'
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalMetadataLocation(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier that can be used to reference this defined location elsewhere in an OSCAL document. A UUID should be consistently used for a given location across revisions of the document.',
        title='Location Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the location, which may be used by a tool for display and navigation.',
        title='Location Title',
    )
    address: OscalMetadataAddress
    email_addresses: Optional[List[OscalMetadataEmailAddress]] = Field(
        None, alias='email-addresses', min_items=1
    )
    telephone_numbers: Optional[List[OscalMetadataTelephoneNumber]] = Field(
        None, alias='telephone-numbers', min_items=1
    )
    urls: Optional[List[AnyUrl]] = Field(None, min_items=1)
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalMetadataParty(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier that can be used to reference this defined location elsewhere in an OSCAL document. A UUID should be consistently used for a given party across revisions of the document.',
        title='Party Universally Unique Identifier',
    )
    type: Type = Field(
        ...,
        description='A category describing the kind of party the object describes.',
        title='Party Type',
    )
    name: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='The full name of the party. This is typically the legal name associated with the party.',
        title='Party Name',
    )
    short_name: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='short-name',
        description='A short common name, abbreviation, or acronym for the party.',
        title='Party Short Name',
    )
    external_ids: Optional[List[ExternalId]] = Field(
        None, alias='external-ids', min_items=1
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    email_addresses: Optional[List[OscalMetadataEmailAddress]] = Field(
        None, alias='email-addresses', min_items=1
    )
    telephone_numbers: Optional[List[OscalMetadataTelephoneNumber]] = Field(
        None, alias='telephone-numbers', min_items=1
    )
    addresses: Optional[List[OscalMetadataAddress]] = Field(None, min_items=1)
    location_uuids: Optional[List[OscalMetadataLocationUuid]] = Field(
        None, alias='location-uuids', min_items=1
    )
    member_of_organizations: Optional[List[MemberOfOrganization]] = Field(
        None, alias='member-of-organizations', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalMetadataRole(OscalBaseModel):
    id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A unique identifier for a specific role instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same role across minor revisions of the document.",
        title='Role Identifier',
    )
    title: str = Field(
        ...,
        description='A name given to the role, which may be used by a tool for display and navigation.',
        title='Role Title',
    )
    short_name: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='short-name',
        description='A short common name, abbreviation, or acronym for the role.',
        title='Role Short Name',
    )
    description: Optional[str] = Field(
        None,
        description="A summary of the role's purpose and associated responsibilities.",
        title='Role Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class Citation(OscalBaseModel):
    text: str = Field(
        ..., description='A line of citation text.', title='Citation Text'
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)


class Resource(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this defined resource elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Resource Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the resource, which may be used by a tool for display and navigation.',
        title='Resource Title',
    )
    description: Optional[str] = Field(
        None,
        description='A short summary of the resource used to indicate the purpose of the resource.',
        title='Resource Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    document_ids: Optional[List[OscalMetadataDocumentId]] = Field(
        None, alias='document-ids', min_items=1
    )
    citation: Optional[Citation] = Field(
        None,
        description='A citation consisting of end note text and optional structured bibliographic data.',
        title='Citation',
    )
    rlinks: Optional[List[Rlink]] = Field(None, min_items=1)
    base64: Optional[Base64] = Field(
        None,
        description='The Base64 alphabet in RFC 2045 - aligned with XSD.',
        title='Base64',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalMetadataBackMatter(OscalBaseModel):
    resources: Optional[List[Resource]] = Field(None, min_items=1)


class OscalAssessmentCommonLocalObjective(OscalBaseModel):
    control_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='control-id',
        description='A reference to a control with a corresponding id value.',
        title='Control Identifier Reference',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this control objective.',
        title='Objective Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    parts: List[CommonPart] = Field(..., min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonAssessmentMethod(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this defined assessment method. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for a given assessment method across revisions of the document.',
        title='Assessment Method Universally Unique Identifier',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this assessment method.',
        title='Assessment Method Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    part: OscalAssessmentCommonAssessmentPart
    remarks: Optional[OscalMetadataRemarks] = None


class Step(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies a step. This UUID may be referenced elsewhere in an OSCAL document when referring to this step. A UUID should be consistently used for a given test step across revisions of the document.',
        title='Step Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this step.', title='Step Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this step.',
        title='Step Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    reviewed_controls: Optional[OscalAssessmentCommonReviewedControls] = Field(
        None, alias='reviewed-controls'
    )
    responsible_roles: Optional[List[OscalMetadataResponsibleRole]] = Field(
        None, alias='responsible-roles', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonActivity(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment activity. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for a given included activity across revisions of the document.',
        title='Assessment Activity Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='The title for this included activity.',
        title='Included Activity Title',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this included activity.',
        title='Included Activity Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    steps: Optional[List[Step]] = Field(None, min_items=1)
    related_controls: Optional[OscalAssessmentCommonReviewedControls] = Field(
        None, alias='related-controls'
    )
    responsible_roles: Optional[List[OscalMetadataResponsibleRole]] = Field(
        None, alias='responsible-roles', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonAssessmentSubject(OscalBaseModel):
    type: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Indicates the type of assessment subject, such as a component, inventory, item, location, or party represented by this selection statement.',
        title='Subject Type',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of the collection of subjects being included in this assessment.',
        title='Include Subjects Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    include_all: Optional[Dict[str, Any]] = Field(
        None,
        alias='include-all',
        description='A key word to indicate all.',
        title='All',
    )
    include_subjects: Optional[List[OscalAssessmentCommonSelectSubjectById]] = Field(
        None, alias='include-subjects', min_items=1
    )
    exclude_subjects: Optional[List[OscalAssessmentCommonSelectSubjectById]] = Field(
        None, alias='exclude-subjects', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class IdentifiedSubject(OscalBaseModel):
    subject_placeholder_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='subject-placeholder-uuid',
        description='References a unique assessment subject placeholder defined by this task.',
        title='Assessment Subject Placeholder Universally Unique Identifier Reference',
    )
    subjects: List[OscalAssessmentCommonAssessmentSubject] = Field(..., min_items=1)


class OscalAssessmentCommonRelatedTask(OscalBaseModel):
    task_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='task-uuid',
        description='References a unique task by UUID.',
        title='Task Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    responsible_parties: Optional[List[OscalMetadataResponsibleParty]] = Field(
        None, alias='responsible-parties', min_items=1
    )
    subjects: Optional[List[OscalAssessmentCommonAssessmentSubject]] = Field(
        None, min_items=1
    )
    identified_subject: Optional[IdentifiedSubject] = Field(
        None,
        alias='identified-subject',
        description='Used to detail assessment subjects that were identfied by this task.',
        title='Identified Subject',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class RelatedResponse(OscalBaseModel):
    response_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='response-uuid',
        description='References a unique risk response by UUID.',
        title='Response Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    related_tasks: Optional[List[OscalAssessmentCommonRelatedTask]] = Field(
        None, alias='related-tasks', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class Entry1(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies a risk log entry. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for this schedule across revisions of the document.',
        title='Risk Log Entry Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this risk log entry.', title='Title'
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of what was done regarding the risk.',
        title='Risk Task Description',
    )
    start: datetime = Field(
        ...,
        description='Identifies the start date and time of the event.',
        title='Start',
    )
    end: Optional[datetime] = Field(
        None,
        description='Identifies the end date and time of the event. If the event is a point in time, the start and end will be the same date and time.',
        title='End',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    logged_by: Optional[List[OscalAssessmentCommonLoggedBy]] = Field(
        None, alias='logged-by', min_items=1
    )
    status_change: Optional[OscalAssessmentCommonRiskStatus] = Field(
        None, alias='status-change'
    )
    related_responses: Optional[List[RelatedResponse]] = Field(
        None, alias='related-responses', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class RiskLog(OscalBaseModel):
    entries: List[Entry1] = Field(..., min_items=1)


class OscalImplementationCommonSystemComponent(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='The unique identifier for the component.',
        title='Component Identifier',
    )
    type: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='A category describing the purpose of the component.',
        title='Component Type',
    )
    title: str = Field(
        ...,
        description='A human readable name for the system component.',
        title='Component Title',
    )
    description: str = Field(
        ...,
        description='A description of the component, including information about its function.',
        title='Component Description',
    )
    purpose: Optional[str] = Field(
        None,
        description='A summary of the technological or business purpose of the component.',
        title='Purpose',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    status: Status1 = Field(
        ...,
        description='Describes the operational status of the system component.',
        title='Status',
    )
    responsible_roles: Optional[List[OscalMetadataResponsibleRole]] = Field(
        None, alias='responsible-roles', min_items=1
    )
    protocols: Optional[List[OscalImplementationCommonProtocol]] = Field(
        None, min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalImplementationCommonSystemUser(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='The unique identifier for the user class.',
        title='User Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the user, which may be used by a tool for display and navigation.',
        title='User Title',
    )
    short_name: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='short-name',
        description='A short common name, abbreviation, or acronym for the user.',
        title='User Short Name',
    )
    description: Optional[str] = Field(
        None,
        description="A summary of the user's purpose within the system.",
        title='User Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    role_ids: Optional[List[OscalMetadataRoleId]] = Field(
        None, alias='role-ids', min_items=1
    )
    authorized_privileges: Optional[
        List[OscalImplementationCommonAuthorizedPrivilege]
    ] = Field(None, alias='authorized-privileges', min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class LocalDefinitions(OscalBaseModel):
    objectives_and_methods: Optional[List[OscalAssessmentCommonLocalObjective]] = Field(
        None, alias='objectives-and-methods', min_items=1
    )
    activities: Optional[List[OscalAssessmentCommonActivity]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class Entry(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies an assessment event. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for this schedule across revisions of the document.',
        title='Assessment Log Entry Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this event.', title='Action Title'
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this event.',
        title='Action Description',
    )
    start: datetime = Field(
        ...,
        description='Identifies the start date and time of an event.',
        title='Start',
    )
    end: Optional[datetime] = Field(
        None,
        description='Identifies the end date and time of an event. If the event is a point in time, the start and end will be the same date and time.',
        title='End',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    logged_by: Optional[List[OscalAssessmentCommonLoggedBy]] = Field(
        None, alias='logged-by', min_items=1
    )
    related_tasks: Optional[List[OscalAssessmentCommonRelatedTask]] = Field(
        None, alias='related-tasks', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class AssessmentLog(OscalBaseModel):
    entries: List[Entry] = Field(..., min_items=1)


class OscalMetadataMetadata(OscalBaseModel):
    title: str = Field(
        ...,
        description='A name given to the document, which may be used by a tool for display and navigation.',
        title='Document Title',
    )
    published: Optional[OscalMetadataPublished] = None
    last_modified: OscalMetadataLastModified = Field(..., alias='last-modified')
    version: OscalMetadataVersion
    oscal_version: OscalMetadataOscalVersion = Field(..., alias='oscal-version')
    revisions: Optional[List[OscalMetadataRevision]] = Field(None, min_items=1)
    document_ids: Optional[List[OscalMetadataDocumentId]] = Field(
        None, alias='document-ids', min_items=1
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    roles: Optional[List[OscalMetadataRole]] = Field(None, min_items=1)
    locations: Optional[List[OscalMetadataLocation]] = Field(None, min_items=1)
    parties: Optional[List[OscalMetadataParty]] = Field(None, min_items=1)
    responsible_parties: Optional[List[OscalMetadataResponsibleParty]] = Field(
        None, alias='responsible-parties', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class AssociatedActivity(OscalBaseModel):
    activity_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='activity-uuid',
        description='References an activity defined in the list of activities.',
        title='Activity Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[List[OscalMetadataResponsibleRole]] = Field(
        None, alias='responsible-roles', min_items=1
    )
    subjects: List[OscalAssessmentCommonAssessmentSubject] = Field(..., min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonTask(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment task.',
        title='Task Universally Unique Identifier',
    )
    type: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(..., description='The type of task.', title='Task Type')
    title: str = Field(..., description='The title for this task.', title='Task Title')
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this task.',
        title='Task Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    timing: Optional[Timing] = Field(
        None,
        description='The timing under which the task is intended to occur.',
        title='Event Timing',
    )
    dependencies: Optional[List[Dependency]] = Field(None, min_items=1)
    tasks: Optional[List[OscalAssessmentCommonTask]] = None
    associated_activities: Optional[List[AssociatedActivity]] = Field(
        None, alias='associated-activities', min_items=1
    )
    subjects: Optional[List[OscalAssessmentCommonAssessmentSubject]] = Field(
        None, min_items=1
    )
    responsible_roles: Optional[List[OscalMetadataResponsibleRole]] = Field(
        None, alias='responsible-roles', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonAssessmentAssets(OscalBaseModel):
    components: Optional[List[OscalImplementationCommonSystemComponent]] = Field(
        None, min_items=1
    )
    assessment_platforms: List[AssessmentPlatform] = Field(
        ..., alias='assessment-platforms', min_items=1
    )


class OscalAssessmentCommonOrigin(OscalBaseModel):
    actors: List[OscalAssessmentCommonOriginActor] = Field(..., min_items=1)
    related_tasks: Optional[List[OscalAssessmentCommonRelatedTask]] = Field(
        None, alias='related-tasks', min_items=1
    )


class OscalAssessmentCommonCharacterization(OscalBaseModel):
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    origin: OscalAssessmentCommonOrigin
    facets: List[Facet] = Field(..., min_items=1)


class OscalAssessmentCommonResponse(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this remediation. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given remediation across revisions.',
        title='Remediation Universally Unique Identifier',
    )
    lifecycle: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Identifies whether this is a recommendation, such as from an assessor or tool, or an actual plan accepted by the system owner.',
        title='Remediation Intent',
    )
    title: str = Field(
        ..., description='The title for this response activity.', title='Response Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this response plan.',
        title='Response Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    origins: Optional[List[OscalAssessmentCommonOrigin]] = Field(None, min_items=1)
    required_assets: Optional[List[RequiredAsset]] = Field(
        None, alias='required-assets', min_items=1
    )
    tasks: Optional[List[OscalAssessmentCommonTask]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class LocalDefinitions1(OscalBaseModel):
    components: Optional[List[OscalImplementationCommonSystemComponent]] = Field(
        None, min_items=1
    )
    inventory_items: Optional[List[OscalImplementationCommonInventoryItem]] = Field(
        None, alias='inventory-items', min_items=1
    )
    users: Optional[List[OscalImplementationCommonSystemUser]] = Field(
        None, min_items=1
    )
    assessment_assets: Optional[OscalAssessmentCommonAssessmentAssets] = Field(
        None, alias='assessment-assets'
    )
    tasks: Optional[List[OscalAssessmentCommonTask]] = Field(None, min_items=1)


class OscalArFinding(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this finding. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given finding across revisions.',
        title='Finding Universally Unique Identifier',
    )
    title: str = Field(
        ..., description='The title for this finding.', title='Finding Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this finding.',
        title='Finding Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    origins: Optional[List[OscalAssessmentCommonOrigin]] = Field(None, min_items=1)
    target: OscalAssessmentCommonFindingTarget
    implementation_statement_uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        alias='implementation-statement-uuid',
        description='Identifies the implementation statement in the SSP to which this finding is related.',
        title='Implementation Statement UUID',
    )
    related_observations: Optional[List[RelatedObservation]] = Field(
        None, alias='related-observations', min_items=1
    )
    related_risks: Optional[List[RelatedRisk]] = Field(
        None, alias='related-risks', min_items=1
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonObservation(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this observation. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given observation across revisions.',
        title='Observation Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this observation.', title='Observation Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this assessment observation.',
        title='Observation Description',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    methods: List[Method] = Field(..., min_items=1)
    types: Optional[List[Type2]] = Field(None, min_items=1)
    origins: Optional[List[OscalAssessmentCommonOrigin]] = Field(None, min_items=1)
    subjects: Optional[List[OscalAssessmentCommonSubjectReference]] = Field(
        None, min_items=1
    )
    relevant_evidence: Optional[List[RelevantEvidence]] = Field(
        None, alias='relevant-evidence', min_items=1
    )
    collected: datetime = Field(
        ...,
        description='Date/time stamp identifying when the finding information was collected.',
        title='collected field',
    )
    expires: Optional[datetime] = Field(
        None,
        description='Date/time identifying when the finding information is out-of-date and no longer valid. Typically used with continuous assessment scenarios.',
        title='expires field',
    )
    remarks: Optional[OscalMetadataRemarks] = None


class OscalAssessmentCommonRisk(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this risk. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given risk across revisions.',
        title='Risk Universally Unique Identifier',
    )
    title: str = Field(..., description='The title for this risk.', title='Risk Title')
    description: str = Field(
        ...,
        description='A human-readable summary of the identified risk, to include a statement of how the risk impacts the system.',
        title='Risk Description',
    )
    statement: str = Field(
        ...,
        description='An summary of impact for how the risk affects the system.',
        title='Risk Statement',
    )
    props: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    status: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ..., description='Describes the status of the associated risk.', title='Status'
    )
    origins: Optional[List[OscalAssessmentCommonOrigin]] = Field(None, min_items=1)
    threat_ids: Optional[List[OscalAssessmentCommonThreatId]] = Field(
        None, alias='threat-ids', min_items=1
    )
    characterizations: Optional[List[OscalAssessmentCommonCharacterization]] = Field(
        None, min_items=1
    )
    mitigating_factors: Optional[List[MitigatingFactor]] = Field(
        None, alias='mitigating-factors', min_items=1
    )
    deadline: Optional[datetime] = Field(
        None,
        description='The date/time by which the risk must be resolved.',
        title='Risk Resolution Deadline',
    )
    remediations: Optional[List[OscalAssessmentCommonResponse]] = Field(
        None, min_items=1
    )
    risk_log: Optional[RiskLog] = Field(
        None,
        alias='risk-log',
        description='A log of all risk-related tasks taken.',
        title='Risk Log',
    )
    related_observations: Optional[List[RelatedObservation1]] = Field(
        None, alias='related-observations', min_items=1
    )


class OscalArResult(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this set of results. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given set of results across revisions.',
        title='Results Universally Unique Identifier',
    )
    title: str = Field(
        ..., description='The title for this set of results.', title='Results Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this set of test results.',
        title='Results Description',
    )
    start: datetime = Field(
        ...,
        description='Date/time stamp identifying the start of the evidence collection reflected in these results.',
        title='start field',
    )
    end: Optional[datetime] = Field(
        None,
        description='Date/time stamp identifying the end of the evidence collection reflected in these results. In a continuous motoring scenario, this may contain the same value as start if appropriate.',
        title='end field',
    )
    prop: Optional[List[OscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalMetadataLink]] = Field(None, min_items=1)
    local_definitions: Optional[LocalDefinitions1] = Field(
        None,
        alias='local-definitions',
        description='Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.',
        title='Local Definitions',
    )
    reviewed_controls: OscalAssessmentCommonReviewedControls = Field(
        ..., alias='reviewed-controls'
    )
    attestations: Optional[List[Attestation]] = Field(None, min_items=1)
    assessment_log: Optional[AssessmentLog] = Field(
        None,
        alias='assessment-log',
        description='A log of all assessment-related actions taken.',
        title='Assessment Log',
    )
    observations: Optional[List[OscalAssessmentCommonObservation]] = Field(
        None, min_items=1
    )
    risks: Optional[List[OscalAssessmentCommonRisk]] = Field(None, min_items=1)
    findings: Optional[List[OscalArFinding]] = Field(None, min_items=1)
    remarks: Optional[OscalMetadataRemarks] = None


class OscalArAssessmentResults(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment results file. This UUID must be changed each time the content of the results changes.',
        title='Assessment Results Universally Unique Identifier',
    )
    metadata: OscalMetadataMetadata
    import_ap: OscalArImportAp = Field(..., alias='import-ap')
    local_definitions: Optional[LocalDefinitions] = Field(
        None,
        alias='local-definitions',
        description='Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.',
        title='Local Definitions',
    )
    results: List[OscalArResult] = Field(..., min_items=1)
    back_matter: Optional[OscalMetadataBackMatter] = Field(None, alias='back-matter')


class Model(OscalBaseModel):
    assessment_results: OscalArAssessmentResults = Field(
        ..., alias='assessment-results'
    )


OscalAssessmentCommonAssessmentPart.update_forward_refs()
CommonPart.update_forward_refs()
OscalAssessmentCommonTask.update_forward_refs()
