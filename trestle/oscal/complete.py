# generated by datamodel-codegen:
#   filename:  oscal_complete_schema.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import AnyUrl, EmailStr, Field, conint, constr
from trestle.core.base_model import OscalBaseModel


class OscalCompleteCommonParameterGuideline(OscalBaseModel):
    prose: str = Field(
        ...,
        description='Prose permits multiple paragraphs, lists, tables etc.',
        title='Guideline Text',
    )


class OscalCompleteCommonParameterValue(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='A parameter value or set of values.', title='Parameter Value'
    )


class HowMany(Enum):
    one = 'one'
    one_or_more = 'one-or-more'


class OscalCompleteCommonParameterSelection(OscalBaseModel):
    how_many: Optional[HowMany] = Field(
        None,
        alias='how-many',
        description='Describes the number of selections that must occur. Without this setting, only one value should be assumed to be permitted.',
        title='Parameter Cardinality',
    )
    choice: Optional[List[str]] = Field(None, min_items=1)


class OscalCompleteOscalMetadataLocationUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='References a location defined in metadata.',
        title='Location Reference',
    )


class Type(Enum):
    person = 'person'
    organization = 'organization'


class ExternalId(OscalBaseModel):
    scheme: AnyUrl = Field(
        ...,
        description='Indicates the type of external identifier.',
        title='External Identifier Schema',
    )
    id: str


class MemberOfOrganization(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Identifies that the party object is a member of the organization associated with the provided UUID.',
        title='Organizational Affiliation',
    )


class OscalCompleteOscalMetadataPartyUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='References a party defined in metadata.',
        title='Party Reference',
    )


class OscalCompleteOscalMetadataRoleId(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='A reference to the roles served by the user.',
        title='Role Identifier Reference',
    )


class Base64(OscalBaseModel):
    filename: Optional[str] = Field(
        None,
        description='Name of the file before it was encoded as Base64 to be embedded in a resource. This is the name that will be assigned to the file when the file is decoded.',
        title='File Name',
    )
    media_type: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='media-type',
        description='Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.',
        title='Media Type',
    )
    value: str


class OscalCompleteOscalMetadataLink(OscalBaseModel):
    href: str = Field(
        ...,
        description='A resolvable URL reference to a resource.',
        title='Hypertext Reference',
    )
    rel: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        description="Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.",
        title='Relation',
    )
    media_type: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='media-type',
        description='Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.',
        title='Media Type',
    )
    text: Optional[str] = Field(
        None,
        description='A textual label to associate with the link, which may be used for presentation in a tool.',
        title='Link Text',
    )


class OscalCompleteOscalMetadataHash(OscalBaseModel):
    algorithm: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='Method by which a hash is derived', title='Hash algorithm'
    )
    value: str


class OscalCompleteOscalMetadataRemarks(OscalBaseModel):
    __root__: str = Field(
        ...,
        description='Additional commentary on the containing object.',
        title='Remarks',
    )


class OscalCompleteOscalMetadataPublished(OscalBaseModel):
    __root__: datetime = Field(
        ...,
        description='The date and time the document was published. The date-time value must be formatted according to RFC 3339 with full time and time zone included.',
        title='Publication Timestamp',
    )


class OscalCompleteOscalMetadataLastModified(OscalBaseModel):
    __root__: datetime = Field(
        ...,
        description='The date and time the document was last modified. The date-time value must be formatted according to RFC 3339 with full time and time zone included.',
        title='Last Modified Timestamp',
    )


class OscalCompleteOscalMetadataVersion(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='A string used to distinguish the current version of the document from other previous (and future) versions.',
        title='Document Version',
    )


class OscalCompleteOscalMetadataOscalVersion(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='The OSCAL model version the document was authored against.',
        title='OSCAL version',
    )


class OscalCompleteOscalMetadataEmailAddress(OscalBaseModel):
    __root__: EmailStr = Field(
        ...,
        description='An email address as defined by RFC 5322 Section 3.4.1.',
        title='Email Address',
    )


class OscalCompleteOscalMetadataTelephoneNumber(OscalBaseModel):
    type: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None, description='Indicates the type of phone number.', title='type flag'
    )
    number: str


class OscalCompleteOscalMetadataAddrLine(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='A single line of an address.', title='Address line'
    )


class OscalCompleteOscalMetadataDocumentId(OscalBaseModel):
    scheme: Optional[AnyUrl] = Field(
        None,
        description='Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters.',
        title='Document Identification Scheme',
    )
    identifier: str


class Method(Enum):
    use_first = 'use-first'
    merge = 'merge'
    keep = 'keep'


class OscalCompleteOscalProfileCombine(OscalBaseModel):
    method: Optional[Method] = Field(
        None,
        description='How clashing controls should be handled',
        title='Combination method',
    )


class OscalCompleteOscalProfileAsIs(OscalBaseModel):
    __root__: bool = Field(
        ...,
        description='An As-is element indicates that the controls should be structured in resolution as they are structured in their source catalogs. It does not contain any elements or attributes.',
        title='As is',
    )


class Order(Enum):
    keep = 'keep'
    ascending = 'ascending'
    descending = 'descending'


class OscalCompleteOscalProfileIncludeAll(OscalBaseModel):
    pass


class WithChildControls(Enum):
    yes = 'yes'
    no = 'no'


class WithId(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(..., description='', title='Match Controls by Identifier')


class Matching(OscalBaseModel):
    pattern: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='A glob expression matching the IDs of one or more controls to be selected.',
        title='Pattern',
    )


class OscalCompleteOscalProfileSelectControlById(OscalBaseModel):
    with_child_controls: Optional[WithChildControls] = Field(
        None,
        alias='with-child-controls',
        description='When a control is included, whether its child (dependent) controls are also included.',
        title='Include contained controls with control',
    )
    with_ids: Optional[List[WithId]] = Field(None, alias='with-ids', min_items=1)
    matching: Optional[List[Matching]] = Field(None, min_items=1)


class OscalCompleteOscalProfileRemove(OscalBaseModel):
    by_name: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='by-name',
        description='Identify items to remove by matching their assigned name',
        title='Reference by (assigned) name',
    )
    by_class: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='by-class',
        description='Identify items to remove by matching their class.',
        title='Reference by class',
    )
    by_id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='by-id',
        description='Identify items to remove indicated by their id.',
        title='Reference by ID',
    )
    by_item_name: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='by-item-name',
        description="Identify items to remove by the name of the item's information element name, e.g. title or prop",
        title='Item Name Reference',
    )
    by_ns: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='by-ns',
        description="Identify items to remove by the item's ns, which is the namespace associated with a part, or prop.",
        title='Item Namespace Reference',
    )


class Position(Enum):
    before = 'before'
    after = 'after'
    starting = 'starting'
    ending = 'ending'


class OscalCompleteOscalComponentDefinitionImportComponentDefinition(OscalBaseModel):
    href: str = Field(
        ...,
        description='A link to a resource that defines a set of components and/or capabilities to import into this collection.',
        title='Hyperlink Reference',
    )


class OscalCompleteOscalComponentDefinitionIncorporatesComponent(OscalBaseModel):
    component_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='component-uuid',
        description='A reference to a component by its identifier',
        title='Component Reference',
    )
    description: str = Field(
        ...,
        description='A description of the component, including information about its function.',
        title='Component Description',
    )


class State(Enum):
    under_development = 'under-development'
    operational = 'operational'
    disposition = 'disposition'
    other = 'other'


class Status(OscalBaseModel):
    state: State = Field(..., description='The operational status.', title='State')
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Transport(Enum):
    TCP = 'TCP'
    UDP = 'UDP'


class OscalCompleteOscalImplementationCommonPortRange(OscalBaseModel):
    start: Optional[conint(ge=0, multiple_of=1)] = Field(
        None,
        description='Indicates the starting port number in a port range',
        title='Start',
    )
    end: Optional[conint(ge=0, multiple_of=1)] = Field(
        None,
        description='Indicates the ending port number in a port range',
        title='End',
    )
    transport: Optional[Transport] = Field(
        None, description='Indicates the transport type.', title='Transport'
    )


class OscalCompleteOscalImplementationCommonImplementationStatus(OscalBaseModel):
    state: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Identifies the implementation status of the control or control objective.',
        title='Implementation State',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalImplementationCommonFunctionPerformed(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='Describes a function performed for a given authorized privilege by this user class.',
        title='Functions Performed',
    )


class Value(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='A parameter value or set of values.', title='Parameter Value'
    )


class OscalCompleteOscalImplementationCommonSetParameter(OscalBaseModel):
    param_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='param-id',
        description="A reference to a parameter within a control, who's catalog has been imported into the current implementation context.",
        title='Parameter ID',
    )
    values: List[Value] = Field(..., min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalImplementationCommonSystemId(OscalBaseModel):
    identifier_type: Optional[AnyUrl] = Field(
        None,
        alias='identifier-type',
        description='Identifies the identification system from which the provided identifier was assigned.',
        title='Identification System Type',
    )
    id: str


class OscalCompleteOscalSspImportProfile(OscalBaseModel):
    href: str = Field(
        ...,
        description="A resolvable URL reference to the profile to use as the system's control baseline.",
        title='Profile Reference',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class InformationTypeId(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='An identifier qualified by the given identification system used, such as NIST SP 800-60.',
        title='Information Type Systematized Identifier',
    )


class Categorization(OscalBaseModel):
    system: AnyUrl = Field(
        ...,
        description='Specifies the information type identification system used.',
        title='Information Type Identification System',
    )
    information_type_ids: Optional[List[InformationTypeId]] = Field(
        None, alias='information-type-ids', min_items=1
    )


class OscalCompleteOscalSspBase(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='The prescribed base (Confidentiality, Integrity, or Availability) security impact level.',
        title='Base Level (Confidentiality, Integrity, or Availability)',
    )


class OscalCompleteOscalSspSelected(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='The selected (Confidentiality, Integrity, or Availability) security impact level.',
        title='Selected Level (Confidentiality, Integrity, or Availability)',
    )


class OscalCompleteOscalSspAdjustmentJustification(OscalBaseModel):
    __root__: str = Field(
        ...,
        description='If the selected security level is different from the base security level, this contains the justification for the change.',
        title='Adjustment Justification',
    )


class OscalCompleteOscalSspSecurityImpactLevel(OscalBaseModel):
    security_objective_confidentiality: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        alias='security-objective-confidentiality',
        description='A target-level of confidentiality for the system, based on the sensitivity of information within the system.',
        title='Security Objective: Confidentiality',
    )
    security_objective_integrity: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        alias='security-objective-integrity',
        description='A target-level of integrity for the system, based on the sensitivity of information within the system.',
        title='Security Objective: Integrity',
    )
    security_objective_availability: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        alias='security-objective-availability',
        description='A target-level of availability for the system, based on the sensitivity of information within the system.',
        title='Security Objective: Availability',
    )


class State1(Enum):
    operational = 'operational'
    under_development = 'under-development'
    under_major_modification = 'under-major-modification'
    disposition = 'disposition'
    other = 'other'


class OscalCompleteOscalSspStatus(OscalBaseModel):
    state: State1 = Field(
        ..., description='The current operating status.', title='State'
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalSspDateAuthorized(OscalBaseModel):
    __root__: constr(
        regex=r'^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))(Z|[+-][0-9]{2}:[0-9]{2})?$'
    ) = Field(
        ...,
        description='The date the system received its authorization.',
        title='System Authorization Date',
    )


class OscalCompleteOscalAssessmentCommonImportSsp(OscalBaseModel):
    href: str = Field(
        ...,
        description='>A resolvable URL reference to the system security plan for the system being assessed.',
        title='System Security Plan Reference',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OnDate(OscalBaseModel):
    date: datetime = Field(
        ...,
        description='The task must occur on the specified date.',
        title='On Date Condition',
    )


class WithinDateRange(OscalBaseModel):
    start: datetime = Field(
        ...,
        description='The task must occur on or after the specified date.',
        title='Start Date Condition',
    )
    end: datetime = Field(
        ...,
        description='The task must occur on or before the specified date.',
        title='End Date Condition',
    )


class Unit(Enum):
    seconds = 'seconds'
    minutes = 'minutes'
    hours = 'hours'
    days = 'days'
    months = 'months'
    years = 'years'


class AtFrequency(OscalBaseModel):
    period: conint(ge=1, multiple_of=1) = Field(
        ...,
        description='The task must occur after the specified period has elapsed.',
        title='Period',
    )
    unit: Unit = Field(
        ..., description='The unit of time for the period.', title='Time Unit'
    )


class Timing(OscalBaseModel):
    on_date: Optional[OnDate] = Field(
        None,
        alias='on-date',
        description='The task is intended to occur on the specified date.',
        title='On Date Condition',
    )
    within_date_range: Optional[WithinDateRange] = Field(
        None,
        alias='within-date-range',
        description='The task is intended to occur within the specified date range.',
        title='On Date Range Condition',
    )
    at_frequency: Optional[AtFrequency] = Field(
        None,
        alias='at-frequency',
        description='The task is intended to occur at the specified frequency.',
        title='Frequency Condition',
    )


class Dependency(OscalBaseModel):
    task_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='task-uuid',
        description='References a unique task by UUID.',
        title='Task Universally Unique Identifier Reference',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class StatementId(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Used to constrain the selection to only specificity identified statements.',
        title='Include Specific Statements',
    )


class OscalCompleteOscalAssessmentCommonSelectControlById(OscalBaseModel):
    control_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='control-id',
        description='A reference to a control with a corresponding id value.',
        title='Control Identifier Reference',
    )
    statement_ids: Optional[List[StatementId]] = Field(
        None, alias='statement-ids', min_items=1
    )


class OscalCompleteOscalAssessmentCommonSelectObjectiveById(OscalBaseModel):
    objective_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='objective-id',
        description='Points to an assessment objective.',
        title='Objective ID',
    )


class Source(OscalBaseModel):
    task_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='task-uuid',
        description='Uniquely identifies an assessment activity to be performed as part of the event. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for this schedule across revisions of the document.',
        title='Task Universally Unique Identifier',
    )


class Type1(Enum):
    statement_id = 'statement-id'
    objective_id = 'objective-id'


class State2(Enum):
    satisfied = 'satisfied'
    not_satisfied = 'not-satisfied'


class Status1(OscalBaseModel):
    state: State2 = Field(
        ...,
        description='An indication as to whether the objective is satisfied or not.',
        title='Objective Status State',
    )
    reason: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        description="The reason the objective was given it's status.",
        title='Objective Status Reason',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Method1(OscalBaseModel):
    __root__: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='Identifies how the observation was made.',
        title='Observation Method',
    )


class Type2(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Identifies the nature of the observation. More than one may be used to further qualify and enable filtering.',
        title='Observation Type',
    )


class Type3(Enum):
    tool = 'tool'
    assessment_platform = 'assessment-platform'
    party = 'party'


class OscalCompleteOscalAssessmentCommonThreatId(OscalBaseModel):
    system: AnyUrl = Field(
        ...,
        description='Specifies the source of the threat information.',
        title='Threat Type Identification System',
    )
    href: Optional[str] = Field(
        None,
        description='An optional location for the threat data, from which this ID originates.',
        title='Threat Information Resource Reference',
    )
    id: str


class RelatedObservation(OscalBaseModel):
    observation_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='observation-uuid',
        description='References an observation defined in the list of observations.',
        title='Observation Universally Unique Identifier Reference',
    )


class OscalCompleteOscalAssessmentCommonLoggedBy(OscalBaseModel):
    party_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='party-uuid',
        description='A pointer to the party who is making the log entry.',
        title='Party UUID Reference',
    )
    role_id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='role-id',
        description='A point to the role-id of the role in which the party is making the log entry.',
        title='Actor Role',
    )


class OscalCompleteOscalAssessmentCommonRiskStatus(OscalBaseModel):
    __root__: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Describes the status of the associated risk.',
        title='Risk Status',
    )


class RelatedObservation1(OscalBaseModel):
    observation_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='observation-uuid',
        description='References an observation defined in the list of observations.',
        title='Observation Universally Unique Identifier Reference',
    )


class RelatedRisk(OscalBaseModel):
    risk_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='risk-uuid',
        description='References an risk defined in the list of risks.',
        title='Risk Universally Unique Identifier Reference',
    )


class OscalCompleteOscalArImportAp(OscalBaseModel):
    href: str = Field(
        ...,
        description='>A resolvable URL reference to the assessment plan governing the assessment activities.',
        title='Assessment Plan Reference',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class RelatedObservation2(OscalBaseModel):
    observation_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='observation-uuid',
        description='References an observation defined in the list of observations.',
        title='Observation Universally Unique Identifier Reference',
    )


class RelatedRisk1(OscalBaseModel):
    risk_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='risk-uuid',
        description='References an risk defined in the list of risks.',
        title='Risk Universally Unique Identifier Reference',
    )


class Test(OscalBaseModel):
    expression: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='A formal (executable) expression of a constraint',
        title='Constraint test',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteCommonParameterConstraint(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='A textual summary of the constraint to be applied.',
        title='Constraint Description',
    )
    tests: Optional[List[Test]] = Field(None, min_items=1)


class Rlink(OscalBaseModel):
    href: str = Field(
        ...,
        description='A resolvable URI reference to a resource.',
        title='Hypertext Reference',
    )
    media_type: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='media-type',
        description='Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.',
        title='Media Type',
    )
    hashes: Optional[List[OscalCompleteOscalMetadataHash]] = Field(None, min_items=1)


class OscalCompleteOscalMetadataProperty(OscalBaseModel):
    name: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A textual label that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object.",
        title='Property Name',
    )
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A unique identifier that can be used to reference this property elsewhere in an OSCAL document. A UUID should be consistently used for a given location across revisions of the document.',
        title='Property Universally Unique Identifier',
    )
    ns: Optional[AnyUrl] = Field(
        None,
        description="A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.",
        title='Property Namespace',
    )
    value: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='Indicates the value of the attribute, characteristic, or quality.',
        title='Property Value',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description="A textual label that provides a sub-type or characterization of the property's name. This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same name and ns.",
        title='Property Class',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalMetadataResponsibleParty(OscalBaseModel):
    role_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='role-id',
        description='The role that the party is responsible for.',
        title='Responsible Role',
    )
    party_uuids: List[OscalCompleteOscalMetadataPartyUuid] = Field(
        ..., alias='party-uuids', min_items=1
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalMetadataResponsibleRole(OscalBaseModel):
    role_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='role-id',
        description='The role that is responsible for the business function.',
        title='Responsible Role ID',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    party_uuids: Optional[List[OscalCompleteOscalMetadataPartyUuid]] = Field(
        None, alias='party-uuids', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalMetadataAddress(OscalBaseModel):
    type: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(None, description='Indicates the type of address.', title='Address Type')
    addr_lines: Optional[List[OscalCompleteOscalMetadataAddrLine]] = Field(
        None, alias='addr-lines', min_items=1
    )
    city: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='City, town or geographical region for the mailing address.',
        title='City',
    )
    state: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='State, province or analogous geographical region for mailing address',
        title='State',
    )
    postal_code: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='postal-code',
        description='Postal or ZIP code for mailing address',
        title='Postal Code',
    )
    country: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='The ISO 3166-1 alpha-2 country code for the mailing address.',
        title='Country Code',
    )


class OscalCompleteOscalProfileImport(OscalBaseModel):
    href: str = Field(
        ...,
        description='A resolvable URL reference to the base catalog or profile that this profile is tailoring.',
        title='Catalog or Profile Reference',
    )
    include_all: Optional[OscalCompleteOscalProfileIncludeAll] = Field(
        None, alias='include-all'
    )
    include_controls: Optional[
        List[OscalCompleteOscalProfileSelectControlById]
    ] = Field(None, alias='include-controls', min_items=1)
    exclude_controls: Optional[
        List[OscalCompleteOscalProfileSelectControlById]
    ] = Field(None, alias='exclude-controls', min_items=1)


class SetParameter(OscalBaseModel):
    param_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='param-id',
        description="Indicates the value of the 'id' flag on a target parameter; i.e. which parameter to set",
        title='Parameter ID',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description='A textual label that provides a characterization of the parameter.',
        title='Parameter Class',
    )
    depends_on: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='depends-on',
        description='Another parameter invoking this one',
        title='Depends on',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    label: Optional[str] = Field(
        None,
        description='A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.',
        title='Parameter Label',
    )
    usage: Optional[str] = Field(
        None,
        description='Describes the purpose and use of a parameter',
        title='Parameter Usage Description',
    )
    constraints: Optional[List[OscalCompleteCommonParameterConstraint]] = Field(
        None, min_items=1
    )
    guidelines: Optional[List[OscalCompleteCommonParameterGuideline]] = Field(
        None, min_items=1
    )
    values: Optional[List[OscalCompleteCommonParameterValue]] = Field(None, min_items=1)
    select: Optional[OscalCompleteCommonParameterSelection] = None


class OscalCompleteOscalProfileInsertControls(OscalBaseModel):
    order: Optional[Order] = Field(
        None,
        description='A designation of how a selection of controls in a profile is to be ordered.',
        title='Order',
    )
    include_all: Optional[OscalCompleteOscalProfileIncludeAll] = Field(
        None, alias='include-all'
    )
    include_controls: Optional[
        List[OscalCompleteOscalProfileSelectControlById]
    ] = Field(None, alias='include-controls', min_items=1)
    exclude_controls: Optional[
        List[OscalCompleteOscalProfileSelectControlById]
    ] = Field(None, alias='exclude-controls', min_items=1)


class OscalCompleteOscalComponentDefinitionStatement(OscalBaseModel):
    statement_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='statement-id',
        description='A reference to a control statement by its identifier',
        title='Control Statement Reference',
    )
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this control statement entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Control Statement Reference Universally Unique Identifier',
    )
    description: str = Field(
        ...,
        description='A summary of how the containing control statement is implemented by the component or capability.',
        title='Statement Implementation Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalImplementationCommonProtocol(OscalBaseModel):
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A globally unique identifier that can be used to reference this service protocol entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Service Protocol Information Universally Unique Identifier',
    )
    name: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='The common name of the protocol, which should be the appropriate "service name" from the IANA Service Name and Transport Protocol Port Number Registry.',
        title='Protocol Name',
    )
    title: Optional[str] = Field(
        None,
        description='A human readable name for the protocol (e.g., Transport Layer Security).',
        title='Protocol Title',
    )
    port_ranges: Optional[
        List[OscalCompleteOscalImplementationCommonPortRange]
    ] = Field(None, alias='port-ranges', min_items=1)


class OscalCompleteOscalImplementationCommonAuthorizedPrivilege(OscalBaseModel):
    title: str = Field(
        ...,
        description='A human readable name for the privilege.',
        title='Privilege Title',
    )
    description: Optional[str] = Field(
        None,
        description="A summary of the privilege's purpose within the system.",
        title='Privilege Description',
    )
    functions_performed: List[
        OscalCompleteOscalImplementationCommonFunctionPerformed
    ] = Field(..., alias='functions-performed', min_items=1)


class ImplementedComponent(OscalBaseModel):
    component_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='component-uuid',
        description='A reference to a component that is implemented as part of an inventory item.',
        title='Component Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_parties: Optional[
        List[OscalCompleteOscalMetadataResponsibleParty]
    ] = Field(None, alias='responsible-parties', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalImplementationCommonInventoryItem(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this inventory item entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Inventory Item Universally Unique Identifier',
    )
    description: str = Field(
        ...,
        description='A summary of the inventory item stating its purpose within the system.',
        title='Inventory Item Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_parties: Optional[
        List[OscalCompleteOscalMetadataResponsibleParty]
    ] = Field(None, alias='responsible-parties', min_items=1)
    implemented_components: Optional[List[ImplementedComponent]] = Field(
        None, alias='implemented-components', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class ConfidentialityImpact(OscalBaseModel):
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    base: OscalCompleteOscalSspBase
    selected: Optional[OscalCompleteOscalSspSelected] = None
    adjustment_justification: Optional[
        OscalCompleteOscalSspAdjustmentJustification
    ] = Field(None, alias='adjustment-justification')


class IntegrityImpact(OscalBaseModel):
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    base: OscalCompleteOscalSspBase
    selected: Optional[OscalCompleteOscalSspSelected] = None
    adjustment_justification: Optional[
        OscalCompleteOscalSspAdjustmentJustification
    ] = Field(None, alias='adjustment-justification')


class AvailabilityImpact(OscalBaseModel):
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    base: OscalCompleteOscalSspBase
    selected: Optional[OscalCompleteOscalSspSelected] = None
    adjustment_justification: Optional[
        OscalCompleteOscalSspAdjustmentJustification
    ] = Field(None, alias='adjustment-justification')


class InformationType(OscalBaseModel):
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A globally unique identifier that can be used to reference this information type entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Information Type Universally Unique Identifier',
    )
    title: str = Field(
        ...,
        description='A human readable name for the information type. This title should be meaningful within the context of the system.',
        title='title field',
    )
    description: str = Field(
        ...,
        description='A summary of how this information type is used within the system.',
        title='Information Type Description',
    )
    categorizations: Optional[List[Categorization]] = Field(None, min_items=1)
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    confidentiality_impact: ConfidentialityImpact = Field(
        ...,
        alias='confidentiality-impact',
        description='The expected level of impact resulting from the unauthorized disclosure of the described information.',
        title='Confidentiality Impact Level',
    )
    integrity_impact: IntegrityImpact = Field(
        ...,
        alias='integrity-impact',
        description='The expected level of impact resulting from the unauthorized modification of the described information.',
        title='Integrity Impact Level',
    )
    availability_impact: AvailabilityImpact = Field(
        ...,
        alias='availability-impact',
        description='The expected level of impact resulting from the disruption of access to or use of the described information or the information system.',
        title='Availability Impact Level',
    )


class OscalCompleteOscalSspSystemInformation(OscalBaseModel):
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    information_types: List[InformationType] = Field(
        ..., alias='information-types', min_items=1
    )


class OscalCompleteOscalSspDiagram(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(..., description='The identifier for this diagram.', title='Diagram ID')
    description: Optional[str] = Field(
        None, description='A summary of the diagram.', title='Diagram Description'
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    caption: Optional[str] = Field(
        None, description='A brief caption to annotate the diagram.', title='Caption'
    )
    remarks: Optional[str] = Field(
        None,
        description='Commentary about the diagram that enhances it.',
        title='remarks field',
    )


class OscalCompleteOscalSspNetworkArchitecture(OscalBaseModel):
    description: str = Field(
        ...,
        description="A summary of the system's network architecture.",
        title='Network Architecture Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    diagrams: Optional[List[OscalCompleteOscalSspDiagram]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalSspDataFlow(OscalBaseModel):
    description: str = Field(
        ...,
        description="A summary of the system's data flow.",
        title='Data Flow Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    diagrams: Optional[List[OscalCompleteOscalSspDiagram]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class LeveragedAuthorization(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this leveraged authorization entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Leveraged Authorization Universally Unique Identifier',
    )
    title: str = Field(
        ...,
        description='A human readable name for the leveraged authorization in the context of the system.',
        title='title field',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    party_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='party-uuid',
        description='A reference to the party that manages the leveraged system.',
        title='party-uuid field',
    )
    date_authorized: OscalCompleteOscalSspDateAuthorized = Field(
        ..., alias='date-authorized'
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Provided(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this provided entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Provided Universally Unique Identifier',
    )
    description: str = Field(
        ...,
        description='An implementation statement that describes the aspects of the control or control statement implementation that can be provided to another system leveraging this system.',
        title='Provided Control Implementation Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Responsibility(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this responsibility entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Responsibility Universally Unique Identifier',
    )
    provided_uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        alias='provided-uuid',
        description="Identifies a 'provided' assembly associated with this assembly.",
        title='Provided UUID',
    )
    description: str = Field(
        ...,
        description='An implementation statement that describes the aspects of the control or control statement implementation that a leveraging system must implement to satisfy the control provided by a leveraged system.',
        title='Control Implementation Responsibility Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Export(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='An implementation statement that describes the aspects of the control or control statement implementation that can be available to another system leveraging this system.',
        title='Control Implementation Export Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    provided: Optional[List[Provided]] = Field(None, min_items=1)
    responsibilities: Optional[List[Responsibility]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Inherited(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this inherited entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Inherited Universally Unique Identifier',
    )
    provided_uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        alias='provided-uuid',
        description="Identifies a 'provided' assembly associated with this assembly.",
        title='Provided UUID',
    )
    description: str = Field(
        ...,
        description='An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is inheriting from a leveraged system.',
        title='Inherited Control Implementation Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)


class Satisfied(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this satisfied entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Satisfied Universally Unique Identifier',
    )
    responsibility_uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        alias='responsibility-uuid',
        description="Identifies a 'provided' assembly associated with this assembly.",
        title='Provided UUID',
    )
    description: str = Field(
        ...,
        description='An implementation statement that describes the aspects of a control or control statement implementation that a leveraging system is implementing based on a requirement from a leveraged system.',
        title='Satisfied Control Implementation Responsibility Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalSspByComponent(OscalBaseModel):
    component_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='component-uuid',
        description='A reference to the component that is implementing a given control or control statement.',
        title='Component Universally Unique Identifier Reference',
    )
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this by-component entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='By-Component Universally Unique Identifier',
    )
    description: str = Field(
        ...,
        description='An implementation statement that describes how a control or a control statement is implemented within the referenced system component.',
        title='Control Implementation Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    set_parameters: Optional[
        List[OscalCompleteOscalImplementationCommonSetParameter]
    ] = Field(None, alias='set-parameters', min_items=1)
    implementation_status: Optional[
        OscalCompleteOscalImplementationCommonImplementationStatus
    ] = Field(None, alias='implementation-status')
    export: Optional[Export] = Field(
        None,
        description='Identifies content intended for external consumption, such as with leveraged organizations.',
        title='Export',
    )
    inherited: Optional[List[Inherited]] = Field(None, min_items=1)
    satisfied: Optional[List[Satisfied]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class ControlSelection(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='A human-readable description of in-scope controls specified for assessment.',
        title='Assessed Controls Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    include_all: Optional[Dict[str, Any]] = Field(
        None,
        alias='include-all',
        description='A key word to indicate all.',
        title='All',
    )
    include_controls: Optional[
        List[OscalCompleteOscalAssessmentCommonSelectControlById]
    ] = Field(None, alias='include-controls', min_items=1)
    exclude_controls: Optional[
        List[OscalCompleteOscalAssessmentCommonSelectControlById]
    ] = Field(None, alias='exclude-controls', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class ControlObjectiveSelection(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this collection of control objectives.',
        title='Control Objectives Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    include_all: Optional[Dict[str, Any]] = Field(
        None,
        alias='include-all',
        description='A key word to indicate all.',
        title='All',
    )
    include_objectives: Optional[
        List[OscalCompleteOscalAssessmentCommonSelectObjectiveById]
    ] = Field(None, alias='include-objectives', min_items=1)
    exclude_objectives: Optional[
        List[OscalCompleteOscalAssessmentCommonSelectObjectiveById]
    ] = Field(None, alias='exclude-objectives', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonReviewedControls(OscalBaseModel):
    description: Optional[str] = Field(
        None,
        description='A human-readable description of control objectives.',
        title='Control Objective Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    control_selections: List[ControlSelection] = Field(
        ..., alias='control-selections', min_items=1
    )
    control_objective_selections: Optional[List[ControlObjectiveSelection]] = Field(
        None, alias='control-objective-selections', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonAssessmentSubjectPlaceholder(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies a set of assessment subjects that will be identified by a task or an activity that is part of a task.',
        title='Assessment Subject Placeholder Universally Unique Identifier',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of intent of this assessment subject placeholder.',
        title='Assessment Subject Placeholder Description',
    )
    sources: List[Source] = Field(..., min_items=1)
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonSelectSubjectById(OscalBaseModel):
    subject_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='subject-uuid',
        description="A pointer to a component, inventory-item, location, party, user, or resource using it's UUID.",
        title='Subject Universally Unique Identifier Reference',
    )
    type: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Used to indicate the type of object pointed to by the uuid-ref within a subject.',
        title='Subject Universally Unique Identifier Reference Type',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonSubjectReference(OscalBaseModel):
    subject_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='subject-uuid',
        description="A pointer to a component, inventory-item, location, party, user, or resource using it's UUID.",
        title='Subject Universally Unique Identifier Reference',
    )
    type: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Used to indicate the type of object pointed to by the uuid-ref within a subject.',
        title='Subject Universally Unique Identifier Reference Type',
    )
    title: Optional[str] = Field(
        None,
        description='The title or name for the referenced subject.',
        title='Subject Reference Title',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class UsesComponent(OscalBaseModel):
    component_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='component-uuid',
        description='A reference to a component that is implemented as part of an inventory item.',
        title='Component Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_parties: Optional[
        List[OscalCompleteOscalMetadataResponsibleParty]
    ] = Field(None, alias='responsible-parties', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class AssessmentPlatform(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment Platform.',
        title='Assessment Platform Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='The title or name for the assessment platform.',
        title='Assessment Platform Title',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    uses_components: Optional[List[UsesComponent]] = Field(
        None, alias='uses-components', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonFindingTarget(OscalBaseModel):
    type: Type1 = Field(
        ...,
        description='Identifies the type of the target.',
        title='Finding Target Type',
    )
    target_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='target-id',
        description='Identifies the specific target qualified by the type.',
        title='Finding Target Identifier Reference',
    )
    title: Optional[str] = Field(
        None,
        description='The title for this objective status.',
        title='Objective Status Title',
    )
    description: Optional[str] = Field(
        None,
        description="A human-readable description of the assessor's conclusions regarding the degree to which an objective is satisfied.",
        title='Objective Status Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    status: Status1 = Field(
        ...,
        description='A determination of if the objective is satisfied or not within a given system.',
        title='Objective Status',
    )
    implementation_status: Optional[
        OscalCompleteOscalImplementationCommonImplementationStatus
    ] = Field(None, alias='implementation-status')
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class RelevantEvidence(OscalBaseModel):
    href: Optional[str] = Field(
        None,
        description='>A resolvable URL reference to relevant evidence.',
        title='Relevant Evidence Reference',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this evidence.',
        title='Relevant Evidence Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonOriginActor(OscalBaseModel):
    type: Type3 = Field(..., description='The kind of actor.', title='Actor Type')
    actor_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='actor-uuid',
        description='A pointer to the tool or person based on the associated type.',
        title='Actor Universally Unique Identifier Reference',
    )
    role_id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='role-id',
        description='For a party, this can optionally be used to specify the role the actor was performing.',
        title='Actor Role',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)


class MitigatingFactor(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this mitigating factor. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given mitigating factor across revisions.',
        title='Mitigating Factor Universally Unique Identifier',
    )
    implementation_uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        alias='implementation-uuid',
        description='Points to an implementation statement in the SSP.',
        title='Implementation UUID',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this mitigating factor.',
        title='Mitigating Factor Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    subjects: Optional[
        List[OscalCompleteOscalAssessmentCommonSubjectReference]
    ] = Field(None, min_items=1)


class Facet(OscalBaseModel):
    name: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='The name of the risk metric within the specified system.',
        title='Facet Name',
    )
    system: AnyUrl = Field(
        ...,
        description='Specifies the naming system under which this risk metric is organized, which allows for the same names to be used in different systems controlled by different parties. This avoids the potential of a name clash.',
        title='Naming System',
    )
    value: constr(regex=r'^\S(.*\S)?$') = Field(
        ..., description='Indicates the value of the facet.', title='Facet Value'
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class RequiredAsset(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this required asset. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given required asset across revisions.',
        title='Required Universally Unique Identifier',
    )
    subjects: Optional[
        List[OscalCompleteOscalAssessmentCommonSubjectReference]
    ] = Field(None, min_items=1)
    title: Optional[str] = Field(
        None,
        description='The title for this required asset.',
        title='Title for Required Asset',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this required asset.',
        title='Description of Required Asset',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonAssessmentPart(OscalBaseModel):
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description="A unique identifier for a specific part instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same part across minor revisions of the document.",
        title='Part Identifier',
    )
    name: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A textual label that uniquely identifies the part's semantic type.",
        title='Part Name',
    )
    ns: Optional[AnyUrl] = Field(
        None,
        description="A namespace qualifying the part's name. This allows different organizations to associate distinct semantics with the same name.",
        title='Part Namespace',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description="A textual label that provides a sub-type or characterization of the part's name. This can be used to further distinguish or discriminate between the semantics of multiple parts of the same control with the same name and ns.",
        title='Part Class',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the part, which may be used by a tool for display and navigation.',
        title='Part Title',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    prose: Optional[str] = Field(
        None,
        description='Permits multiple paragraphs, lists, tables etc.',
        title='Part Text',
    )
    parts: Optional[List[OscalCompleteOscalAssessmentCommonAssessmentPart]] = None
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)


class Attestation(OscalBaseModel):
    responsible_parties: Optional[
        List[OscalCompleteOscalMetadataResponsibleParty]
    ] = Field(None, alias='responsible-parties', min_items=1)
    parts: List[OscalCompleteOscalAssessmentCommonAssessmentPart] = Field(
        ..., min_items=1
    )


class Origin(OscalBaseModel):
    actors: List[OscalCompleteOscalAssessmentCommonOriginActor] = Field(
        ..., min_items=1
    )


class OscalCompleteOscalPoamPoamItem(OscalBaseModel):
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='Uniquely identifies the POA&M entry. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for a given POA&M item across revisions of the document.',
        title='POA&M Item Universally Unique Identifier',
    )
    title: str = Field(
        ...,
        description='The title or name for this POA&M item .',
        title='POA&M Item Title',
    )
    description: str = Field(
        ...,
        description='A human-readable description of POA&M item.',
        title='POA&M Item Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    origins: Optional[List[Origin]] = Field(None, min_items=1)
    related_observations: Optional[List[RelatedObservation2]] = Field(
        None, alias='related-observations', min_items=1
    )
    related_risks: Optional[List[RelatedRisk1]] = Field(
        None, alias='related-risks', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteCommonPart(OscalBaseModel):
    id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        description="A unique identifier for a specific part instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same part across minor revisions of the document.",
        title='Part Identifier',
    )
    name: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A textual label that uniquely identifies the part's semantic type.",
        title='Part Name',
    )
    ns: Optional[AnyUrl] = Field(
        None,
        description="A namespace qualifying the part's name. This allows different organizations to associate distinct semantics with the same name.",
        title='Part Namespace',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description="A textual label that provides a sub-type or characterization of the part's name. This can be used to further distinguish or discriminate between the semantics of multiple parts of the same control with the same name and ns.",
        title='Part Class',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the part, which may be used by a tool for display and navigation.',
        title='Part Title',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    prose: Optional[str] = Field(
        None,
        description='Permits multiple paragraphs, lists, tables etc.',
        title='Part Text',
    )
    parts: Optional[List[OscalCompleteCommonPart]] = None
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)


class OscalCompleteCommonParameter(OscalBaseModel):
    id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A unique identifier for a specific parameter instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same parameter across minor revisions of the document.",
        title='Parameter Identifier',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description='A textual label that provides a characterization of the parameter.',
        title='Parameter Class',
    )
    depends_on: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='depends-on',
        description='Another parameter invoking this one',
        title='Depends on',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    label: Optional[str] = Field(
        None,
        description='A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.',
        title='Parameter Label',
    )
    usage: Optional[str] = Field(
        None,
        description='Describes the purpose and use of a parameter',
        title='Parameter Usage Description',
    )
    constraints: Optional[List[OscalCompleteCommonParameterConstraint]] = Field(
        None, min_items=1
    )
    guidelines: Optional[List[OscalCompleteCommonParameterGuideline]] = Field(
        None, min_items=1
    )
    values: Optional[List[OscalCompleteCommonParameterValue]] = Field(None, min_items=1)
    select: Optional[OscalCompleteCommonParameterSelection] = None
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalMetadataRevision(OscalBaseModel):
    title: Optional[str] = Field(
        None,
        description='A name given to the document revision, which may be used by a tool for display and navigation.',
        title='Document Title',
    )
    published: Optional[OscalCompleteOscalMetadataPublished] = None
    last_modified: Optional[OscalCompleteOscalMetadataLastModified] = Field(
        None, alias='last-modified'
    )
    version: Optional[OscalCompleteOscalMetadataVersion] = None
    oscal_version: Optional[OscalCompleteOscalMetadataOscalVersion] = Field(
        None, alias='oscal-version'
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalMetadataLocation(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier that can be used to reference this defined location elsewhere in an OSCAL document. A UUID should be consistently used for a given location across revisions of the document.',
        title='Location Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the location, which may be used by a tool for display and navigation.',
        title='Location Title',
    )
    address: OscalCompleteOscalMetadataAddress
    email_addresses: Optional[List[OscalCompleteOscalMetadataEmailAddress]] = Field(
        None, alias='email-addresses', min_items=1
    )
    telephone_numbers: Optional[
        List[OscalCompleteOscalMetadataTelephoneNumber]
    ] = Field(None, alias='telephone-numbers', min_items=1)
    urls: Optional[List[AnyUrl]] = Field(None, min_items=1)
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalMetadataParty(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier that can be used to reference this defined location elsewhere in an OSCAL document. A UUID should be consistently used for a given party across revisions of the document.',
        title='Party Universally Unique Identifier',
    )
    type: Type = Field(
        ...,
        description='A category describing the kind of party the object describes.',
        title='Party Type',
    )
    name: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        description='The full name of the party. This is typically the legal name associated with the party.',
        title='Party Name',
    )
    short_name: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='short-name',
        description='A short common name, abbreviation, or acronym for the party.',
        title='Party Short Name',
    )
    external_ids: Optional[List[ExternalId]] = Field(
        None, alias='external-ids', min_items=1
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    email_addresses: Optional[List[OscalCompleteOscalMetadataEmailAddress]] = Field(
        None, alias='email-addresses', min_items=1
    )
    telephone_numbers: Optional[
        List[OscalCompleteOscalMetadataTelephoneNumber]
    ] = Field(None, alias='telephone-numbers', min_items=1)
    addresses: Optional[List[OscalCompleteOscalMetadataAddress]] = Field(
        None, min_items=1
    )
    location_uuids: Optional[List[OscalCompleteOscalMetadataLocationUuid]] = Field(
        None, alias='location-uuids', min_items=1
    )
    member_of_organizations: Optional[List[MemberOfOrganization]] = Field(
        None, alias='member-of-organizations', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalMetadataRole(OscalBaseModel):
    id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A unique identifier for a specific role instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same role across minor revisions of the document.",
        title='Role Identifier',
    )
    title: str = Field(
        ...,
        description='A name given to the role, which may be used by a tool for display and navigation.',
        title='Role Title',
    )
    short_name: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='short-name',
        description='A short common name, abbreviation, or acronym for the role.',
        title='Role Short Name',
    )
    description: Optional[str] = Field(
        None,
        description="A summary of the role's purpose and associated responsibilities.",
        title='Role Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Citation(OscalBaseModel):
    text: str = Field(
        ..., description='A line of citation text.', title='Citation Text'
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)


class Resource(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this defined resource elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Resource Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the resource, which may be used by a tool for display and navigation.',
        title='Resource Title',
    )
    description: Optional[str] = Field(
        None,
        description='A short summary of the resource used to indicate the purpose of the resource.',
        title='Resource Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    document_ids: Optional[List[OscalCompleteOscalMetadataDocumentId]] = Field(
        None, alias='document-ids', min_items=1
    )
    citation: Optional[Citation] = Field(
        None,
        description='A citation consisting of end note text and optional structured bibliographic data.',
        title='Citation',
    )
    rlinks: Optional[List[Rlink]] = Field(None, min_items=1)
    base64: Optional[Base64] = Field(
        None,
        description='The Base64 alphabet in RFC 2045 - aligned with XSD.',
        title='Base64',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalMetadataBackMatter(OscalBaseModel):
    resources: Optional[List[Resource]] = Field(None, min_items=1)


class OscalCompleteOscalProfileGroup(OscalBaseModel):
    id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        description="A unique identifier for a specific group instance that can be used to reference the group within this and in other OSCAL documents. This identifier's uniqueness is document scoped and is intended to be consistent for the same group across minor revisions of the document.",
        title='Group Identifier',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description='A textual label that provides a sub-type or characterization of the group.',
        title='Group Class',
    )
    title: str = Field(
        ...,
        description='A name given to the group, which may be used by a tool for display and navigation.',
        title='Group Title',
    )
    params: Optional[List[OscalCompleteCommonParameter]] = Field(None, min_items=1)
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    parts: Optional[List[OscalCompleteCommonPart]] = Field(None, min_items=1)
    groups: Optional[List[OscalCompleteOscalProfileGroup]] = None
    insert_controls: Optional[List[OscalCompleteOscalProfileInsertControls]] = Field(
        None, alias='insert-controls', min_items=1
    )


class OscalCompleteOscalProfileAdd(OscalBaseModel):
    position: Optional[Position] = Field(
        None,
        description='Where to add the new content with respect to the targeted element (beside it or inside it)',
        title='Position',
    )
    by_id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='by-id',
        description='Target location of the addition.',
        title='Reference by ID',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the control, which may be used by a tool for display and navigation.',
        title='Title Change',
    )
    params: Optional[List[OscalCompleteCommonParameter]] = Field(None, min_items=1)
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    parts: Optional[List[OscalCompleteCommonPart]] = Field(None, min_items=1)


class OscalCompleteOscalComponentDefinitionImplementedRequirement(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier for a specific control implementation.',
        title='Control Implementation Identifier',
    )
    control_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='control-id',
        description='A reference to a control with a corresponding id value.',
        title='Control Identifier Reference',
    )
    description: str = Field(
        ...,
        description='A description of how the specified control is implemented for the containing component or capability.',
        title='Control Implementation Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    set_parameters: Optional[
        List[OscalCompleteOscalImplementationCommonSetParameter]
    ] = Field(None, alias='set-parameters', min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    statements: Optional[List[OscalCompleteOscalComponentDefinitionStatement]] = Field(
        None, min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalImplementationCommonSystemComponent(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='The unique identifier for the component.',
        title='Component Identifier',
    )
    type: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='A category describing the purpose of the component.',
        title='Component Type',
    )
    title: str = Field(
        ...,
        description='A human readable name for the system component.',
        title='Component Title',
    )
    description: str = Field(
        ...,
        description='A description of the component, including information about its function.',
        title='Component Description',
    )
    purpose: Optional[str] = Field(
        None,
        description='A summary of the technological or business purpose of the component.',
        title='Purpose',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    status: Status = Field(
        ...,
        description='Describes the operational status of the system component.',
        title='Status',
    )
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    protocols: Optional[List[OscalCompleteOscalImplementationCommonProtocol]] = Field(
        None, min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalImplementationCommonSystemUser(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='The unique identifier for the user class.',
        title='User Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the user, which may be used by a tool for display and navigation.',
        title='User Title',
    )
    short_name: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='short-name',
        description='A short common name, abbreviation, or acronym for the user.',
        title='User Short Name',
    )
    description: Optional[str] = Field(
        None,
        description="A summary of the user's purpose within the system.",
        title='User Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    role_ids: Optional[List[OscalCompleteOscalMetadataRoleId]] = Field(
        None, alias='role-ids', min_items=1
    )
    authorized_privileges: Optional[
        List[OscalCompleteOscalImplementationCommonAuthorizedPrivilege]
    ] = Field(None, alias='authorized-privileges', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalSspAuthorizationBoundary(OscalBaseModel):
    description: str = Field(
        ...,
        description="A summary of the system's authorization boundary.",
        title='Authorization Boundary Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    diagrams: Optional[List[OscalCompleteOscalSspDiagram]] = Field(None, min_items=1)
    remarks: Optional[str] = Field(
        None,
        description="Commentary about the system's authorization boundary that enhances the diagram.",
        title='remarks field',
    )


class OscalCompleteOscalSspSystemImplementation(OscalBaseModel):
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    leveraged_authorizations: Optional[List[LeveragedAuthorization]] = Field(
        None, alias='leveraged-authorizations', min_items=1
    )
    users: List[OscalCompleteOscalImplementationCommonSystemUser] = Field(
        ..., min_items=1
    )
    components: List[OscalCompleteOscalImplementationCommonSystemComponent] = Field(
        ..., min_items=1
    )
    inventory_items: Optional[
        List[OscalCompleteOscalImplementationCommonInventoryItem]
    ] = Field(None, alias='inventory-items', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalSspStatement(OscalBaseModel):
    statement_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='statement-id',
        description='A reference to a control statement by its identifier',
        title='Control Statement Reference',
    )
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this control statement entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Control Statement Reference Universally Unique Identifier',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    by_components: Optional[List[OscalCompleteOscalSspByComponent]] = Field(
        None, alias='by-components', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class TermsAndConditions(OscalBaseModel):
    parts: Optional[List[OscalCompleteOscalAssessmentCommonAssessmentPart]] = Field(
        None, min_items=1
    )


class OscalCompleteOscalAssessmentCommonLocalObjective(OscalBaseModel):
    control_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='control-id',
        description='A reference to a control with a corresponding id value.',
        title='Control Identifier Reference',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this control objective.',
        title='Objective Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    parts: List[OscalCompleteCommonPart] = Field(..., min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonAssessmentMethod(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this defined assessment method. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for a given assessment method across revisions of the document.',
        title='Assessment Method Universally Unique Identifier',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this assessment method.',
        title='Assessment Method Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    part: OscalCompleteOscalAssessmentCommonAssessmentPart
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Step(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies a step. This UUID may be referenced elsewhere in an OSCAL document when referring to this step. A UUID should be consistently used for a given test step across revisions of the document.',
        title='Step Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this step.', title='Step Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this step.',
        title='Step Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    reviewed_controls: Optional[
        OscalCompleteOscalAssessmentCommonReviewedControls
    ] = Field(None, alias='reviewed-controls')
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonActivity(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment activity. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for a given included activity across revisions of the document.',
        title='Assessment Activity Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='The title for this included activity.',
        title='Included Activity Title',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this included activity.',
        title='Included Activity Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    steps: Optional[List[Step]] = Field(None, min_items=1)
    related_controls: Optional[
        OscalCompleteOscalAssessmentCommonReviewedControls
    ] = Field(None, alias='related-controls')
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonAssessmentSubject(OscalBaseModel):
    type: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Indicates the type of assessment subject, such as a component, inventory, item, location, or party represented by this selection statement.',
        title='Subject Type',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of the collection of subjects being included in this assessment.',
        title='Include Subjects Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    include_all: Optional[Dict[str, Any]] = Field(
        None,
        alias='include-all',
        description='A key word to indicate all.',
        title='All',
    )
    include_subjects: Optional[
        List[OscalCompleteOscalAssessmentCommonSelectSubjectById]
    ] = Field(None, alias='include-subjects', min_items=1)
    exclude_subjects: Optional[
        List[OscalCompleteOscalAssessmentCommonSelectSubjectById]
    ] = Field(None, alias='exclude-subjects', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonAssessmentAssets(OscalBaseModel):
    components: Optional[
        List[OscalCompleteOscalImplementationCommonSystemComponent]
    ] = Field(None, min_items=1)
    assessment_platforms: List[AssessmentPlatform] = Field(
        ..., alias='assessment-platforms', min_items=1
    )


class IdentifiedSubject(OscalBaseModel):
    subject_placeholder_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='subject-placeholder-uuid',
        description='References a unique assessment subject placeholder defined by this task.',
        title='Assessment Subject Placeholder Universally Unique Identifier Reference',
    )
    subjects: List[OscalCompleteOscalAssessmentCommonAssessmentSubject] = Field(
        ..., min_items=1
    )


class OscalCompleteOscalAssessmentCommonRelatedTask(OscalBaseModel):
    task_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='task-uuid',
        description='References a unique task by UUID.',
        title='Task Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_parties: Optional[
        List[OscalCompleteOscalMetadataResponsibleParty]
    ] = Field(None, alias='responsible-parties', min_items=1)
    subjects: Optional[
        List[OscalCompleteOscalAssessmentCommonAssessmentSubject]
    ] = Field(None, min_items=1)
    identified_subject: Optional[IdentifiedSubject] = Field(
        None,
        alias='identified-subject',
        description='Used to detail assessment subjects that were identfied by this task.',
        title='Identified Subject',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class RelatedResponse(OscalBaseModel):
    response_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='response-uuid',
        description='References a unique risk response by UUID.',
        title='Response Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    related_tasks: Optional[
        List[OscalCompleteOscalAssessmentCommonRelatedTask]
    ] = Field(None, alias='related-tasks', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Entry(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies a risk log entry. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for this schedule across revisions of the document.',
        title='Risk Log Entry Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this risk log entry.', title='Title'
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of what was done regarding the risk.',
        title='Risk Task Description',
    )
    start: datetime = Field(
        ...,
        description='Identifies the start date and time of the event.',
        title='Start',
    )
    end: Optional[datetime] = Field(
        None,
        description='Identifies the end date and time of the event. If the event is a point in time, the start and end will be the same date and time.',
        title='End',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    logged_by: Optional[List[OscalCompleteOscalAssessmentCommonLoggedBy]] = Field(
        None, alias='logged-by', min_items=1
    )
    status_change: Optional[OscalCompleteOscalAssessmentCommonRiskStatus] = Field(
        None, alias='status-change'
    )
    related_responses: Optional[List[RelatedResponse]] = Field(
        None, alias='related-responses', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class RiskLog(OscalBaseModel):
    entries: List[Entry] = Field(..., min_items=1)


class LocalDefinitions1(OscalBaseModel):
    objectives_and_methods: Optional[
        List[OscalCompleteOscalAssessmentCommonLocalObjective]
    ] = Field(None, alias='objectives-and-methods', min_items=1)
    activities: Optional[List[OscalCompleteOscalAssessmentCommonActivity]] = Field(
        None, min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class Entry1(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies an assessment event. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. A UUID should be consistently used for this schedule across revisions of the document.',
        title='Assessment Log Entry Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this event.', title='Action Title'
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this event.',
        title='Action Description',
    )
    start: datetime = Field(
        ...,
        description='Identifies the start date and time of an event.',
        title='Start',
    )
    end: Optional[datetime] = Field(
        None,
        description='Identifies the end date and time of an event. If the event is a point in time, the start and end will be the same date and time.',
        title='End',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    logged_by: Optional[List[OscalCompleteOscalAssessmentCommonLoggedBy]] = Field(
        None, alias='logged-by', min_items=1
    )
    related_tasks: Optional[
        List[OscalCompleteOscalAssessmentCommonRelatedTask]
    ] = Field(None, alias='related-tasks', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class AssessmentLog(OscalBaseModel):
    entries: List[Entry1] = Field(..., min_items=1)


class OscalCompleteOscalPoamLocalDefinitions(OscalBaseModel):
    components: Optional[
        List[OscalCompleteOscalImplementationCommonSystemComponent]
    ] = Field(None, min_items=1)
    inventory_items: Optional[
        List[OscalCompleteOscalImplementationCommonInventoryItem]
    ] = Field(None, alias='inventory-items', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalCatalogControl(OscalBaseModel):
    id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description="A unique identifier for a specific control instance that can be used to reference the control in other OSCAL documents. This identifier's uniqueness is document scoped and is intended to be consistent for the same control across minor revisions of the document.",
        title='Control Identifier',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description='A textual label that provides a sub-type or characterization of the control.',
        title='Control Class',
    )
    title: str = Field(
        ...,
        description='A name given to the control, which may be used by a tool for display and navigation.',
        title='Control Title',
    )
    params: Optional[List[OscalCompleteCommonParameter]] = Field(None, min_items=1)
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    parts: Optional[List[OscalCompleteCommonPart]] = Field(None, min_items=1)
    controls: Optional[List[OscalCompleteOscalCatalogControl]] = None


class OscalCompleteOscalMetadataMetadata(OscalBaseModel):
    title: str = Field(
        ...,
        description='A name given to the document, which may be used by a tool for display and navigation.',
        title='Document Title',
    )
    published: Optional[OscalCompleteOscalMetadataPublished] = None
    last_modified: OscalCompleteOscalMetadataLastModified = Field(
        ..., alias='last-modified'
    )
    version: OscalCompleteOscalMetadataVersion
    oscal_version: OscalCompleteOscalMetadataOscalVersion = Field(
        ..., alias='oscal-version'
    )
    revisions: Optional[List[OscalCompleteOscalMetadataRevision]] = Field(
        None, min_items=1
    )
    document_ids: Optional[List[OscalCompleteOscalMetadataDocumentId]] = Field(
        None, alias='document-ids', min_items=1
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    roles: Optional[List[OscalCompleteOscalMetadataRole]] = Field(None, min_items=1)
    locations: Optional[List[OscalCompleteOscalMetadataLocation]] = Field(
        None, min_items=1
    )
    parties: Optional[List[OscalCompleteOscalMetadataParty]] = Field(None, min_items=1)
    responsible_parties: Optional[
        List[OscalCompleteOscalMetadataResponsibleParty]
    ] = Field(None, alias='responsible-parties', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalProfileCustom(OscalBaseModel):
    groups: Optional[List[OscalCompleteOscalProfileGroup]] = Field(None, min_items=1)
    insert_controls: Optional[List[OscalCompleteOscalProfileInsertControls]] = Field(
        None, alias='insert-controls', min_items=1
    )


class OscalCompleteOscalProfileAlter(OscalBaseModel):
    control_id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='control-id',
        description='A reference to a control with a corresponding id value.',
        title='Control Identifier Reference',
    )
    removes: Optional[List[OscalCompleteOscalProfileRemove]] = Field(None, min_items=1)
    adds: Optional[List[OscalCompleteOscalProfileAdd]] = Field(None, min_items=1)


class OscalCompleteOscalComponentDefinitionControlImplementation(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier for the set of implemented controls.',
        title='Control Implementation Set Identifier',
    )
    source: str = Field(
        ...,
        description='A reference to an OSCAL catalog or profile providing the referenced control or subcontrol definition.',
        title='Source Resource Reference',
    )
    description: str = Field(
        ...,
        description='A description of how the specified set of controls are implemented for the containing component or capability.',
        title='Control Implementation Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    set_parameters: Optional[
        List[OscalCompleteOscalImplementationCommonSetParameter]
    ] = Field(None, alias='set-parameters', min_items=1)
    implemented_requirements: List[
        OscalCompleteOscalComponentDefinitionImplementedRequirement
    ] = Field(..., alias='implemented-requirements', min_items=1)


class OscalCompleteOscalSspSystemCharacteristics(OscalBaseModel):
    system_ids: List[OscalCompleteOscalImplementationCommonSystemId] = Field(
        ..., alias='system-ids', min_items=1
    )
    system_name: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        alias='system-name',
        description='The full name of the system.',
        title='System Name - Full',
    )
    system_name_short: Optional[constr(regex=r'^\S(.*\S)?$')] = Field(
        None,
        alias='system-name-short',
        description='A short name for the system, such as an acronym, that is suitable for display in a data table or summary list.',
        title='System Name - Short',
    )
    description: str = Field(
        ..., description='A summary of the system.', title='System Description'
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    date_authorized: Optional[OscalCompleteOscalSspDateAuthorized] = Field(
        None, alias='date-authorized'
    )
    security_sensitivity_level: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        alias='security-sensitivity-level',
        description='The overall information system sensitivity categorization, such as defined by FIPS-199.',
        title='Security Sensitivity Level',
    )
    system_information: OscalCompleteOscalSspSystemInformation = Field(
        ..., alias='system-information'
    )
    security_impact_level: OscalCompleteOscalSspSecurityImpactLevel = Field(
        ..., alias='security-impact-level'
    )
    status: OscalCompleteOscalSspStatus
    authorization_boundary: OscalCompleteOscalSspAuthorizationBoundary = Field(
        ..., alias='authorization-boundary'
    )
    network_architecture: Optional[OscalCompleteOscalSspNetworkArchitecture] = Field(
        None, alias='network-architecture'
    )
    data_flow: Optional[OscalCompleteOscalSspDataFlow] = Field(None, alias='data-flow')
    responsible_parties: Optional[
        List[OscalCompleteOscalMetadataResponsibleParty]
    ] = Field(None, alias='responsible-parties', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalSspImplementedRequirement(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier that can be used to reference this control requirement entry elsewhere in an OSCAL document. A UUID should be consistently used for a given resource across revisions of the document.',
        title='Control Requirement Universally Unique Identifier',
    )
    control_id: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        alias='control-id',
        description='A reference to a control with a corresponding id value.',
        title='Control Identifier Reference',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    set_parameters: Optional[
        List[OscalCompleteOscalImplementationCommonSetParameter]
    ] = Field(None, alias='set-parameters', min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    statements: Optional[List[OscalCompleteOscalSspStatement]] = Field(
        None, min_items=1
    )
    by_components: Optional[List[OscalCompleteOscalSspByComponent]] = Field(
        None, alias='by-components', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class LocalDefinitions(OscalBaseModel):
    components: Optional[
        List[OscalCompleteOscalImplementationCommonSystemComponent]
    ] = Field(None, min_items=1)
    inventory_items: Optional[
        List[OscalCompleteOscalImplementationCommonInventoryItem]
    ] = Field(None, alias='inventory-items', min_items=1)
    users: Optional[List[OscalCompleteOscalImplementationCommonSystemUser]] = Field(
        None, min_items=1
    )
    objectives_and_methods: Optional[
        List[OscalCompleteOscalAssessmentCommonLocalObjective]
    ] = Field(None, alias='objectives-and-methods', min_items=1)
    activities: Optional[List[OscalCompleteOscalAssessmentCommonActivity]] = Field(
        None, min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class AssociatedActivity(OscalBaseModel):
    activity_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='activity-uuid',
        description='References an activity defined in the list of activities.',
        title='Activity Universally Unique Identifier Reference',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    subjects: List[OscalCompleteOscalAssessmentCommonAssessmentSubject] = Field(
        ..., min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonTask(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment task.',
        title='Task Universally Unique Identifier',
    )
    type: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(..., description='The type of task.', title='Task Type')
    title: str = Field(..., description='The title for this task.', title='Task Title')
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this task.',
        title='Task Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    timing: Optional[Timing] = Field(
        None,
        description='The timing under which the task is intended to occur.',
        title='Event Timing',
    )
    dependencies: Optional[List[Dependency]] = Field(None, min_items=1)
    tasks: Optional[List[OscalCompleteOscalAssessmentCommonTask]] = None
    associated_activities: Optional[List[AssociatedActivity]] = Field(
        None, alias='associated-activities', min_items=1
    )
    subjects: Optional[
        List[OscalCompleteOscalAssessmentCommonAssessmentSubject]
    ] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonOrigin(OscalBaseModel):
    actors: List[OscalCompleteOscalAssessmentCommonOriginActor] = Field(
        ..., min_items=1
    )
    related_tasks: Optional[
        List[OscalCompleteOscalAssessmentCommonRelatedTask]
    ] = Field(None, alias='related-tasks', min_items=1)


class OscalCompleteOscalAssessmentCommonCharacterization(OscalBaseModel):
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    origin: OscalCompleteOscalAssessmentCommonOrigin
    facets: List[Facet] = Field(..., min_items=1)


class OscalCompleteOscalAssessmentCommonResponse(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this remediation. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given remediation across revisions.',
        title='Remediation Universally Unique Identifier',
    )
    lifecycle: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ...,
        description='Identifies whether this is a recommendation, such as from an assessor or tool, or an actual plan accepted by the system owner.',
        title='Remediation Intent',
    )
    title: str = Field(
        ..., description='The title for this response activity.', title='Response Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this response plan.',
        title='Response Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    origins: Optional[List[OscalCompleteOscalAssessmentCommonOrigin]] = Field(
        None, min_items=1
    )
    required_assets: Optional[List[RequiredAsset]] = Field(
        None, alias='required-assets', min_items=1
    )
    tasks: Optional[List[OscalCompleteOscalAssessmentCommonTask]] = Field(
        None, min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class LocalDefinitions2(OscalBaseModel):
    components: Optional[
        List[OscalCompleteOscalImplementationCommonSystemComponent]
    ] = Field(None, min_items=1)
    inventory_items: Optional[
        List[OscalCompleteOscalImplementationCommonInventoryItem]
    ] = Field(None, alias='inventory-items', min_items=1)
    users: Optional[List[OscalCompleteOscalImplementationCommonSystemUser]] = Field(
        None, min_items=1
    )
    assessment_assets: Optional[
        OscalCompleteOscalAssessmentCommonAssessmentAssets
    ] = Field(None, alias='assessment-assets')
    tasks: Optional[List[OscalCompleteOscalAssessmentCommonTask]] = Field(
        None, min_items=1
    )


class OscalCompleteOscalArFinding(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this finding. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given finding across revisions.',
        title='Finding Universally Unique Identifier',
    )
    title: str = Field(
        ..., description='The title for this finding.', title='Finding Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this finding.',
        title='Finding Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    origins: Optional[List[OscalCompleteOscalAssessmentCommonOrigin]] = Field(
        None, min_items=1
    )
    target: OscalCompleteOscalAssessmentCommonFindingTarget
    implementation_statement_uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        alias='implementation-statement-uuid',
        description='Identifies the implementation statement in the SSP to which this finding is related.',
        title='Implementation Statement UUID',
    )
    related_observations: Optional[List[RelatedObservation1]] = Field(
        None, alias='related-observations', min_items=1
    )
    related_risks: Optional[List[RelatedRisk]] = Field(
        None, alias='related-risks', min_items=1
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalCatalogGroup(OscalBaseModel):
    id: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        description="A unique identifier for a specific group instance that can be used to reference the group within this and in other OSCAL documents. This identifier's uniqueness is document scoped and is intended to be consistent for the same group across minor revisions of the document.",
        title='Group Identifier',
    )
    class_: Optional[
        constr(
            regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
        )
    ] = Field(
        None,
        alias='class',
        description='A textual label that provides a sub-type or characterization of the group.',
        title='Group Class',
    )
    title: str = Field(
        ...,
        description='A name given to the group, which may be used by a tool for display and navigation.',
        title='Group Title',
    )
    params: Optional[List[OscalCompleteCommonParameter]] = Field(None, min_items=1)
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    parts: Optional[List[OscalCompleteCommonPart]] = Field(None, min_items=1)
    groups: Optional[List[OscalCompleteOscalCatalogGroup]] = None
    controls: Optional[List[OscalCompleteOscalCatalogControl]] = Field(
        None, min_items=1
    )


class OscalCompleteOscalProfileMerge(OscalBaseModel):
    combine: Optional[OscalCompleteOscalProfileCombine] = None
    as_is: Optional[OscalCompleteOscalProfileAsIs] = Field(None, alias='as-is')
    custom: Optional[OscalCompleteOscalProfileCustom] = None


class OscalCompleteOscalProfileModify(OscalBaseModel):
    set_parameters: Optional[List[SetParameter]] = Field(
        None, alias='set-parameters', min_items=1
    )
    alters: Optional[List[OscalCompleteOscalProfileAlter]] = Field(None, min_items=1)


class OscalCompleteOscalComponentDefinitionDefinedComponent(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='The unique identifier for the component.',
        title='Component Identifier',
    )
    type: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description='A category describing the purpose of the component.',
        title='Component Type',
    )
    title: str = Field(
        ...,
        description='A human readable name for the component.',
        title='Component Title',
    )
    description: str = Field(
        ...,
        description='A description of the component, including information about its function.',
        title='Component Description',
    )
    purpose: Optional[str] = Field(
        None,
        description='A summary of the technological or business purpose of the component.',
        title='Purpose',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    responsible_roles: Optional[
        List[OscalCompleteOscalMetadataResponsibleRole]
    ] = Field(None, alias='responsible-roles', min_items=1)
    protocols: Optional[List[OscalCompleteOscalImplementationCommonProtocol]] = Field(
        None, min_items=1
    )
    control_implementations: Optional[
        List[OscalCompleteOscalComponentDefinitionControlImplementation]
    ] = Field(None, alias='control-implementations', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalComponentDefinitionCapability(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier for a capability.',
        title='Capability Identifier',
    )
    name: constr(regex=r'^\S(.*\S)?$') = Field(
        ...,
        description="The capability's human-readable name.",
        title='Capability Name',
    )
    description: str = Field(
        ..., description='A summary of the capability.', title='Capability Description'
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    incorporates_components: Optional[
        List[OscalCompleteOscalComponentDefinitionIncorporatesComponent]
    ] = Field(None, alias='incorporates-components', min_items=1)
    control_implementations: Optional[
        List[OscalCompleteOscalComponentDefinitionControlImplementation]
    ] = Field(None, alias='control-implementations', min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalSspControlImplementation(OscalBaseModel):
    description: str = Field(
        ...,
        description='A statement describing important things to know about how this set of control satisfaction documentation is approached.',
        title='Control Implementation Description',
    )
    set_parameters: Optional[
        List[OscalCompleteOscalImplementationCommonSetParameter]
    ] = Field(None, alias='set-parameters', min_items=1)
    implemented_requirements: List[OscalCompleteOscalSspImplementedRequirement] = Field(
        ..., alias='implemented-requirements', min_items=1
    )


class OscalCompleteOscalApAssessmentPlan(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment plan. This UUID must be changed each time the content of the plan changes.',
        title='Assessment Plan Universally Unique Identifier',
    )
    metadata: OscalCompleteOscalMetadataMetadata
    import_ssp: OscalCompleteOscalAssessmentCommonImportSsp = Field(
        ..., alias='import-ssp'
    )
    local_definitions: Optional[LocalDefinitions] = Field(
        None,
        alias='local-definitions',
        description='Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.',
        title='Local Definitions',
    )
    terms_and_conditions: Optional[TermsAndConditions] = Field(
        None,
        alias='terms-and-conditions',
        description='Used to define various terms and conditions under which an assessment, described by the plan, can be performed. Each child part defines a different type of term or condition.',
        title='Assessment Plan Terms and Conditions',
    )
    reviewed_controls: OscalCompleteOscalAssessmentCommonReviewedControls = Field(
        ..., alias='reviewed-controls'
    )
    assessment_subjects: Optional[
        List[OscalCompleteOscalAssessmentCommonAssessmentSubject]
    ] = Field(None, alias='assessment-subjects', min_items=1)
    assessment_assets: Optional[
        OscalCompleteOscalAssessmentCommonAssessmentAssets
    ] = Field(None, alias='assessment-assets')
    tasks: Optional[List[OscalCompleteOscalAssessmentCommonTask]] = Field(
        None, min_items=1
    )
    back_matter: Optional[OscalCompleteOscalMetadataBackMatter] = Field(
        None, alias='back-matter'
    )


class OscalCompleteOscalAssessmentCommonObservation(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this observation. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given observation across revisions.',
        title='Observation Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this observation.', title='Observation Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this assessment observation.',
        title='Observation Description',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    methods: List[Method1] = Field(..., min_items=1)
    types: Optional[List[Type2]] = Field(None, min_items=1)
    origins: Optional[List[OscalCompleteOscalAssessmentCommonOrigin]] = Field(
        None, min_items=1
    )
    subjects: Optional[
        List[OscalCompleteOscalAssessmentCommonSubjectReference]
    ] = Field(None, min_items=1)
    relevant_evidence: Optional[List[RelevantEvidence]] = Field(
        None, alias='relevant-evidence', min_items=1
    )
    collected: datetime = Field(
        ...,
        description='Date/time stamp identifying when the finding information was collected.',
        title='collected field',
    )
    expires: Optional[datetime] = Field(
        None,
        description='Date/time identifying when the finding information is out-of-date and no longer valid. Typically used with continuous assessment scenarios.',
        title='expires field',
    )
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalAssessmentCommonRisk(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this risk. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given risk across revisions.',
        title='Risk Universally Unique Identifier',
    )
    title: str = Field(..., description='The title for this risk.', title='Risk Title')
    description: str = Field(
        ...,
        description='A human-readable summary of the identified risk, to include a statement of how the risk impacts the system.',
        title='Risk Description',
    )
    statement: str = Field(
        ...,
        description='An summary of impact for how the risk affects the system.',
        title='Risk Statement',
    )
    props: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    status: constr(
        regex=r'^[_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-\.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$'
    ) = Field(
        ..., description='Describes the status of the associated risk.', title='Status'
    )
    origins: Optional[List[OscalCompleteOscalAssessmentCommonOrigin]] = Field(
        None, min_items=1
    )
    threat_ids: Optional[List[OscalCompleteOscalAssessmentCommonThreatId]] = Field(
        None, alias='threat-ids', min_items=1
    )
    characterizations: Optional[
        List[OscalCompleteOscalAssessmentCommonCharacterization]
    ] = Field(None, min_items=1)
    mitigating_factors: Optional[List[MitigatingFactor]] = Field(
        None, alias='mitigating-factors', min_items=1
    )
    deadline: Optional[datetime] = Field(
        None,
        description='The date/time by which the risk must be resolved.',
        title='Risk Resolution Deadline',
    )
    remediations: Optional[List[OscalCompleteOscalAssessmentCommonResponse]] = Field(
        None, min_items=1
    )
    risk_log: Optional[RiskLog] = Field(
        None,
        alias='risk-log',
        description='A log of all risk-related tasks taken.',
        title='Risk Log',
    )
    related_observations: Optional[List[RelatedObservation]] = Field(
        None, alias='related-observations', min_items=1
    )


class OscalCompleteOscalArResult(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this set of results. This UUID may be referenced elsewhere in an OSCAL document when referring to this information. Once assigned, a UUID should be consistently used for a given set of results across revisions.',
        title='Results Universally Unique Identifier',
    )
    title: str = Field(
        ..., description='The title for this set of results.', title='Results Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this set of test results.',
        title='Results Description',
    )
    start: datetime = Field(
        ...,
        description='Date/time stamp identifying the start of the evidence collection reflected in these results.',
        title='start field',
    )
    end: Optional[datetime] = Field(
        None,
        description='Date/time stamp identifying the end of the evidence collection reflected in these results. In a continuous motoring scenario, this may contain the same value as start if appropriate.',
        title='end field',
    )
    prop: Optional[List[OscalCompleteOscalMetadataProperty]] = Field(None, min_items=1)
    links: Optional[List[OscalCompleteOscalMetadataLink]] = Field(None, min_items=1)
    local_definitions: Optional[LocalDefinitions2] = Field(
        None,
        alias='local-definitions',
        description='Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.',
        title='Local Definitions',
    )
    reviewed_controls: OscalCompleteOscalAssessmentCommonReviewedControls = Field(
        ..., alias='reviewed-controls'
    )
    attestations: Optional[List[Attestation]] = Field(None, min_items=1)
    assessment_log: Optional[AssessmentLog] = Field(
        None,
        alias='assessment-log',
        description='A log of all assessment-related actions taken.',
        title='Assessment Log',
    )
    observations: Optional[List[OscalCompleteOscalAssessmentCommonObservation]] = Field(
        None, min_items=1
    )
    risks: Optional[List[OscalCompleteOscalAssessmentCommonRisk]] = Field(
        None, min_items=1
    )
    findings: Optional[List[OscalCompleteOscalArFinding]] = Field(None, min_items=1)
    remarks: Optional[OscalCompleteOscalMetadataRemarks] = None


class OscalCompleteOscalPoamPlanOfActionAndMilestones(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this POA&M. This UUID must be changed each time the content of the POA&M changes.',
        title='POA&M Universally Unique Identifier',
    )
    metadata: OscalCompleteOscalMetadataMetadata
    import_ssp: Optional[OscalCompleteOscalAssessmentCommonImportSsp] = Field(
        None, alias='import-ssp'
    )
    system_id: Optional[OscalCompleteOscalImplementationCommonSystemId] = Field(
        None, alias='system-id'
    )
    local_definitions: Optional[OscalCompleteOscalPoamLocalDefinitions] = Field(
        None, alias='local-definitions'
    )
    observations: Optional[List[OscalCompleteOscalAssessmentCommonObservation]] = Field(
        None, min_items=1
    )
    risks: Optional[List[OscalCompleteOscalAssessmentCommonRisk]] = Field(
        None, min_items=1
    )
    poam_items: List[OscalCompleteOscalPoamPoamItem] = Field(
        ..., alias='poam-items', min_items=1
    )
    back_matter: Optional[OscalCompleteOscalMetadataBackMatter] = Field(
        None, alias='back-matter'
    )


class Model5(OscalBaseModel):
    assessment_plan: OscalCompleteOscalApAssessmentPlan = Field(
        ..., alias='assessment-plan'
    )


class Model7(OscalBaseModel):
    plan_of_action_and_milestones: OscalCompleteOscalPoamPlanOfActionAndMilestones = (
        Field(..., alias='plan-of-action-and-milestones')
    )


class OscalCompleteOscalCatalogCatalog(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier for this catalog instance. This UUID should be changed when this document is revised.',
        title='Catalog Universally Unique Identifier',
    )
    metadata: OscalCompleteOscalMetadataMetadata
    params: Optional[List[OscalCompleteCommonParameter]] = Field(None, min_items=1)
    controls: Optional[List[OscalCompleteOscalCatalogControl]] = Field(
        None, min_items=1
    )
    groups: Optional[List[OscalCompleteOscalCatalogGroup]] = Field(None, min_items=1)
    back_matter: Optional[OscalCompleteOscalMetadataBackMatter] = Field(
        None, alias='back-matter'
    )


class OscalCompleteOscalProfileProfile(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier for this profile instance. This UUID should be changed when this document is revised.',
        title='Catalog Universally Unique Identifier',
    )
    metadata: OscalCompleteOscalMetadataMetadata
    imports: List[OscalCompleteOscalProfileImport] = Field(..., min_items=1)
    merge: Optional[OscalCompleteOscalProfileMerge] = None
    modify: Optional[OscalCompleteOscalProfileModify] = None
    back_matter: Optional[OscalCompleteOscalMetadataBackMatter] = Field(
        None, alias='back-matter'
    )


class OscalCompleteOscalComponentDefinitionComponentDefinition(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier for this component definition instance. This UUID should be changed when this document is revised.',
        title='Component Definition Universally Unique Identifier',
    )
    metadata: OscalCompleteOscalMetadataMetadata
    import_component_definitions: Optional[
        List[OscalCompleteOscalComponentDefinitionImportComponentDefinition]
    ] = Field(None, alias='import-component-definitions', min_items=1)
    components: Optional[
        List[OscalCompleteOscalComponentDefinitionDefinedComponent]
    ] = Field(None, min_items=1)
    capabilities: Optional[
        List[OscalCompleteOscalComponentDefinitionCapability]
    ] = Field(None, min_items=1)
    back_matter: Optional[OscalCompleteOscalMetadataBackMatter] = Field(
        None, alias='back-matter'
    )


class OscalCompleteOscalSspSystemSecurityPlan(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A globally unique identifier for this catalog instance. This UUID should be changed when this document is revised.',
        title='System Security Plan Universally Unique Identifier',
    )
    metadata: OscalCompleteOscalMetadataMetadata
    import_profile: OscalCompleteOscalSspImportProfile = Field(
        ..., alias='import-profile'
    )
    system_characteristics: OscalCompleteOscalSspSystemCharacteristics = Field(
        ..., alias='system-characteristics'
    )
    system_implementation: OscalCompleteOscalSspSystemImplementation = Field(
        ..., alias='system-implementation'
    )
    control_implementation: OscalCompleteOscalSspControlImplementation = Field(
        ..., alias='control-implementation'
    )
    back_matter: Optional[OscalCompleteOscalMetadataBackMatter] = Field(
        None, alias='back-matter'
    )


class OscalCompleteOscalArAssessmentResults(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment results file. This UUID must be changed each time the content of the results changes.',
        title='Assessment Results Universally Unique Identifier',
    )
    metadata: OscalCompleteOscalMetadataMetadata
    import_ap: OscalCompleteOscalArImportAp = Field(..., alias='import-ap')
    local_definitions: Optional[LocalDefinitions1] = Field(
        None,
        alias='local-definitions',
        description='Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.',
        title='Local Definitions',
    )
    results: List[OscalCompleteOscalArResult] = Field(..., min_items=1)
    back_matter: Optional[OscalCompleteOscalMetadataBackMatter] = Field(
        None, alias='back-matter'
    )


class Model1(OscalBaseModel):
    catalog: OscalCompleteOscalCatalogCatalog


class Model2(OscalBaseModel):
    profile: OscalCompleteOscalProfileProfile


class Model3(OscalBaseModel):
    component_definition: OscalCompleteOscalComponentDefinitionComponentDefinition = (
        Field(..., alias='component-definition')
    )


class Model4(OscalBaseModel):
    system_security_plan: OscalCompleteOscalSspSystemSecurityPlan = Field(
        ..., alias='system-security-plan'
    )


class Model6(OscalBaseModel):
    assessment_results: OscalCompleteOscalArAssessmentResults = Field(
        ..., alias='assessment-results'
    )


class Model(OscalBaseModel):
    __root__: Union[Model1, Model2, Model3, Model4, Model5, Model6, Model7]


OscalCompleteOscalAssessmentCommonAssessmentPart.update_forward_refs()
OscalCompleteCommonPart.update_forward_refs()
OscalCompleteOscalProfileGroup.update_forward_refs()
OscalCompleteOscalCatalogControl.update_forward_refs()
OscalCompleteOscalAssessmentCommonTask.update_forward_refs()
OscalCompleteOscalCatalogGroup.update_forward_refs()
