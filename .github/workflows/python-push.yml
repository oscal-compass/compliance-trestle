# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Trestle Deploy

on:
  push:
    branches:
      - main
  schedule:
    # Run once per day to ensure we have no build failures due to dependency updates.
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 22 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        - os: macos-latest
          path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache
        python-version: [3.7, 3.8, 3.9]

    steps:
    - name: Don't mess with  line endings
      run: |
        git config --global core.autocrlf false
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      with:
        path: ${{ matrix.path }}
        key: ${{ matrix.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.cfg') }}
        restore-keys: |
         ${{ matrix.os }}-${{ matrix.python-version }}-pip-

    - name: Install build tools
      run: |
        make develop
    - name: Setup pre-commit
      if: ${{ (matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7') }}
      run: |
        make pre-commit
    - name: Install dependencies
      run: |
        make install
    - name: Run md document formatting (mdformat)
      if: ${{ (matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7') }}
      run: |
        make mdformat
    - name: Run code formatting (yapf)
      if: ${{ (matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7') }}
      run: |
        make code-format
    - name: Run code linting (flake8)
      if: ${{ (matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7') }}
      run: |
        make code-lint
    - name: Run code typing check (mypy)
      if: ${{ (matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7') }}
      continue-on-error: true 
      run: |
        make code-typing
    - name: Validate website content (mkdocs)
      if: ${{ (matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7') }}
      run: |
        make docs-validate
    - name: Pytest Fast
      if: ${{ !(matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7') }}
      run: |
        make test
    - name: Pytest Cov
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7' }}
      run: |
        make test-cov
    - name: Push code-cov
      if: ${{ !(matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7') }}
      uses: codecov/codecov-action@v1
      with: 
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
        token: ${{ secrets.ADMIN_PAT }} 
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install build tools
      run: |
        make develop
    - name: Create release
      shell: bash
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        GH_TOKEN: ${{ secrets.ADMIN_PAT }}
      run: |
        make release

  deploy-docs:
    runs-on: ubuntu-latest
    needs: deploy
    concurrency: 
      group: ${{ github.ref }}-${{ github.workflow }}-${{ github.job }}-docs
      cancel-in-progress: true
    # Temporary hack: allow develop as well as master to deploy docs.
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
        token: ${{ secrets.ADMIN_PAT }} 
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      # This is deliberately not using a custom credential as it relies on native github actions token to have push rights.
      with:
        python-version: 3.7
    - name: Install build tools
      run: |
        make develop
    - name: Create release
      shell: bash
      run: |
        mkdocs gh-deploy

  merge-main-to-develop:
    name: Merge main -> develop
    runs-on: ubuntu-latest
    needs: deploy
    concurrency: 
      group: ${{ github.ref }}-${{ github.workflow }}-${{ github.job }}-main
      cancel-in-progress: true
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.ADMIN_PAT }}
        source-branch: main
        target-branch: develop
        commit-message: "chore: Merge back version tags and changelog into develop."

